// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: server2client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Server2Client {

  /// <summary>Holder for reflection information generated from server2client.proto</summary>
  public static partial class Server2ClientReflection {

    #region Descriptor
    /// <summary>File descriptor for server2client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Server2ClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNzZXJ2ZXIyY2xpZW50LnByb3RvEg1TZXJ2ZXIyQ2xpZW50Gg5nYW1lX3Rh",
            "Zy5wcm90byJCChBIZWFydEJlYXRBY2tJbmZvEhIKCnNlcnZlclRpbWUYASAB",
            "KAMiGgoBThIICgR6ZXJvEAASCwoGT3BDb2RlEOoHIt8BChJBY3Rpdml0eVN0",
            "YXR1c0luZm8SLQoMYWN0aXZpdHlUeXBlGAEgASgOMhcucHJvdG9jb2wuRUFj",
            "dGl2aXR5VHlwZRISCgphY3Rpdml0eUlkGAIgASgFEikKBnN0YXR1cxgDIAEo",
            "DjIZLnByb3RvY29sLkVBY3Rpdml0eVN0YXR1cxIRCglzdGFydFRpbWUYBCAB",
            "KAMSDwoHZW5kVGltZRgFIAEoAxIYChBnbUxldmVsQ29uZGl0aW9uGAYgASgF",
            "Eg4KBmlzT3BlbhgHIAEoCBINCgVmbGFncxgIIAMoBSK9AQoWR2V0VXNlckFj",
            "dGl2aXR5RGF0YUFjaxI7CgRjb2RlGAEgASgOMi0uU2VydmVyMkNsaWVudC5H",
            "ZXRVc2VyQWN0aXZpdHlEYXRhQWNrLkFja0NvZGUSNQoMYWN0aXZpdHlEYXRh",
            "GAIgAygLMh8uU2VydmVyMkNsaWVudC5Vc2VyQWN0aXZpdHlJbmZvIi8KB0Fj",
            "a0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQARINCglQYXJhbXNFcnIQAiKb",
            "AQoOQWN0aXZpdHlDb25maWcSEgoKYWN0aXZpdHlJZBgBIAEoBRItCgxhY3Rp",
            "dml0eVR5cGUYAiABKA4yFy5wcm90b2NvbC5FQWN0aXZpdHlUeXBlEg8KB2Vu",
            "ZFRpbWUYAyABKAUSNQoMYWN0aXZpdHlDb25mGAQgAygLMh8uU2VydmVyMkNs",
            "aWVudC5BY3Rpdml0eVByb2dyZXNzImkKEEFjdGl2aXR5UHJvZ3Jlc3MSFQoN",
            "Y29uZGl0aW9uVHlwZRgBIAEoBRIWCg5jb25kaXRpb25WYWx1ZRgCIAEoBRIm",
            "Cglhd2FyZExpc3QYAyADKAsyEy5wcm90b2NvbC5Bd2FyZEluZm8iywEKEFVz",
            "ZXJBY3Rpdml0eUluZm8SFQoNYWN0aXZpdHlJbmRleBgBIAEoBRIQCghwcm9n",
            "cmVzcxgCIAEoBRIVCg1hd2FyZFByb2dyZXNzGAMgASgFEhMKC3JlZnJlc2hN",
            "YXJrGAQgASgFEhQKDGluZGV4RW5kVGltZRgFIAEoBRI1Cg5hY3Rpdml0eUNv",
            "bmZpZxgGIAEoCzIdLlNlcnZlcjJDbGllbnQuQWN0aXZpdHlDb25maWcSFQoN",
            "cmVhbFN0YXJ0VGltZRgHIAEoAyLMAQoWVXNlclVubG9ja0Jsb2NrTGlzdEFj",
            "axI7CgRjb2RlGAEgASgOMi0uU2VydmVyMkNsaWVudC5Vc2VyVW5sb2NrQmxv",
            "Y2tMaXN0QWNrLkFja0NvZGUSJgoJYmxvY2tMaXN0GAIgAygLMhMucHJvdG9j",
            "b2wuQmxvY2tEYXRhIk0KB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQ",
            "ARINCglQYXJhbXNFcnIQAhIKCgZOb0RhdGUQAxIQCgxPcmxlYW5zX0ZhaWwQ",
            "BCLAAQoRVXNlckJsb2NrU2xvdHNBY2sSNgoEY29kZRgBIAEoDjIoLlNlcnZl",
            "cjJDbGllbnQuVXNlckJsb2NrU2xvdHNBY2suQWNrQ29kZRITCgtibG9ja0lk",
            "TGlzdBgCIAMoAxIPCgd0b3BpY0lkGAMgASgFIk0KB0Fja0NvZGUSCAoERmFp",
            "bBAAEgsKB1N1Y2Nlc3MQARINCglQYXJhbXNFcnIQAhIKCgZOb0RhdGUQAxIQ",
            "CgxPcmxlYW5zX0ZhaWwQBCK6AQoUUmVxRXF1aXBCbG9ja1Nsb3RBY2sSOQoE",
            "Y29kZRgBIAEoDjIrLlNlcnZlcjJDbGllbnQuUmVxRXF1aXBCbG9ja1Nsb3RB",
            "Y2suQWNrQ29kZSJnCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAES",
            "DQoJUGFyYW1zRXJyEAISDAoIUmVwZWF0ZWQQAxIKCgZMb2NrZWQQBBIKCgZO",
            "b0RhdGUQBRIQCgxPcmxlYW5zX0ZhaWwQBiLAAQoRUmVzZXRCbG9ja1Nsb3RB",
            "Y2sSNgoEY29kZRgBIAEoDjIoLlNlcnZlcjJDbGllbnQuUmVzZXRCbG9ja1Ns",
            "b3RBY2suQWNrQ29kZRITCgtibG9ja0lkTGlzdBgCIAMoAxIPCgd0b3BpY0lk",
            "GAMgASgFIk0KB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQARINCglQ",
            "YXJhbXNFcnIQAhIKCgZOb0RhdGUQAxIQCgxPcmxlYW5zX0ZhaWwQBCLKAQoV",
            "VW5sb2NrQmxvY2tMaXN0TmV3QWNrEjoKBGNvZGUYASABKA4yLC5TZXJ2ZXIy",
            "Q2xpZW50LlVubG9ja0Jsb2NrTGlzdE5ld0Fjay5BY2tDb2RlEiYKCWJsb2Nr",
            "TGlzdBgCIAMoCzITLnByb3RvY29sLkJsb2NrRGF0YSJNCgdBY2tDb2RlEggK",
            "BEZhaWwQABILCgdTdWNjZXNzEAESDQoJUGFyYW1zRXJyEAISCgoGTm9EYXRl",
            "EAMSEAoMT3JsZWFuc19GYWlsEAQi2AEKF0VxdWlwVG9waWNCbG9ja1Nsb3Rz",
            "QWNrEjwKBGNvZGUYASABKA4yLi5TZXJ2ZXIyQ2xpZW50LkVxdWlwVG9waWNC",
            "bG9ja1Nsb3RzQWNrLkFja0NvZGUSEwoLYmxvY2tJZExpc3QYAiADKAMSDwoH",
            "dG9waWNJZBgDIAEoBSJZCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNz",
            "EAESDQoJUGFyYW1zRXJyEAISCgoGTm9EYXRlEAMSCgoGTG9ja2VkEAQSEAoM",
            "T3JsZWFuc19GYWlsEAUikQEKDFNlbmRBd2FyZEFjaxIxCgRjb2RlGAEgASgO",
            "MiMuU2VydmVyMkNsaWVudC5TZW5kQXdhcmRBY2suQWNrQ29kZRIgCghpdGVt",
            "TGlzdBgCIAMoCzIOLnByb3RvY29sLkl0ZW0iLAoHQWNrQ29kZRIICgRGYWls",
            "EAASCwoHU3VjY2VzcxABEgoKBk5vRGF0ZRACIjEKDU1haWxTdGF0ZURhdGES",
            "DgoGbWFpbElkGAEgASgJEhAKCGhhdmVSZWFkGAIgASgIIrQBChNHZXRNYWls",
            "U3RhdGVMaXN0QWNrEjgKBGNvZGUYASABKA4yKi5TZXJ2ZXIyQ2xpZW50Lkdl",
            "dE1haWxTdGF0ZUxpc3RBY2suQWNrQ29kZRIvCgltYWlsU3RhdGUYAiADKAsy",
            "HC5TZXJ2ZXIyQ2xpZW50Lk1haWxTdGF0ZURhdGEiMgoHQWNrQ29kZRIICgRG",
            "YWlsEAASCwoHU3VjY2VzcxABEhAKDE9ybGVhbnNfRmFpbBACIs0BChlMUzJD",
            "X0dldEFjdGl2aXR5U3RhdHVzQWNrEj4KBGNvZGUYASABKA4yMC5TZXJ2ZXIy",
            "Q2xpZW50LkxTMkNfR2V0QWN0aXZpdHlTdGF0dXNBY2suQWNrQ29kZRI9ChJh",
            "Y3Rpdml0eVN0YXR1c0luZm8YAiADKAsyIS5TZXJ2ZXIyQ2xpZW50LkFjdGl2",
            "aXR5U3RhdHVzSW5mbxIPCgdnbUxldmVsGAMgASgFIiAKB0Fja0NvZGUSCAoE",
            "RmFpbBAAEgsKB1N1Y2Nlc3MQASKOAQoXTFMyQ19EYWlseU1hdGNoX1VzZUl0",
            "ZW0SPwoHYWNrQ29kZRgBIAEoDjIuLlNlcnZlcjJDbGllbnQuTFMyQ19EYWls",
            "eU1hdGNoX1VzZUl0ZW0uQWNrQ29kZSIyCgdBY2tDb2RlEggKBEZhaWwQABIL",
            "CgdTdWNjZXNzEAESEAoMSW52YWxpZFRva2VuEAMifQoRTFMyQ19TZXRBZENv",
            "ZGVBY2sSNgoEY29kZRgBIAEoDjIoLlNlcnZlcjJDbGllbnQuTFMyQ19TZXRB",
            "ZENvZGVBY2suQWNrQ29kZRIOCgZhZENvZGUYAiABKAkiIAoHQWNrQ29kZRII",
            "CgRGYWlsEAASCwoHU3VjY2VzcxABIncKDkxTMkNfR2V0QWRDb2RlEjMKBGNv",
            "ZGUYASABKA4yJS5TZXJ2ZXIyQ2xpZW50LkxTMkNfR2V0QWRDb2RlLkFja0Nv",
            "ZGUSDgoGYWRDb2RlGAIgASgJIiAKB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1",
            "Y2Nlc3MQASL6AQoVTFMyQ19Vc2VyQmFzZUluZm9fQWNrEj0KB2Fja0NvZGUY",
            "ASABKA4yLC5TZXJ2ZXIyQ2xpZW50LkxTMkNfVXNlckJhc2VJbmZvX0Fjay5B",
            "Y2tDb2RlEiQKCHVzZXJJbmZvGAIgASgLMhIucHJvdG9jb2wuVXNlckluZm8S",
            "LgoNY2hhcmFjdGVyRGF0YRgDIAMoCzIXLnByb3RvY29sLkNoYXJhY3RlckRh",
            "dGESKgoJZnVuY3Rpb25zGAQgAygOMhcucHJvdG9jb2wuRUZ1bmN0aW9uVHlw",
            "ZSIgCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEiXgoTTW9kZUl0",
            "ZW1TaGFyZWRDb3VudBIuCghpdGVtVHlwZRgBIAEoDjIcLnByb3RvY29sLkVD",
            "cnVzaE1vZGVJdGVtVHlwZRIXCg9sZWZ0U2hhcmVDb3VudHMYAiABKAUi6QIK",
            "E0xTMkNfU3RhcnRfR2FtZV9BY2sSOwoHYWNrQ29kZRgBIAEoDjIqLlNlcnZl",
            "cjJDbGllbnQuTFMyQ19TdGFydF9HYW1lX0Fjay5BY2tDb2RlEhEKCWdhbWVU",
            "b2tlbhgCIAEoCRI6Cg5pdGVtU2hhcmVkSW5mbxgDIAMoCzIiLlNlcnZlcjJD",
            "bGllbnQuTW9kZUl0ZW1TaGFyZWRDb3VudBIbChNkYWlseUNoYWxsZW5nZUNv",
            "dW50GAQgASgFEhEKCW1hdGNoU2VlZBgFIAEoBRIQCghzdGFnZU1kNRgGIAEo",
            "CSKDAQoHQWNrQ29kZRIICgRGYWlsEAASCwoHU3VjY2VzcxABEgwKCExlc3ND",
            "b2luEAISEwoPR2FtZVR5cGVOb3RPcGVuEAMSDAoIVXBkYXRpbmcQBBIOCgpO",
            "ZWVkU2V0dGxlEAUSDgoKV2FpdFNldHRsZRAGEhAKDEludmFsaWRTdGFnZRAH",
            "IowCChFMUzJDX0VuZF9HYW1lX0FjaxI5CgdhY2tDb2RlGAEgASgOMiguU2Vy",
            "dmVyMkNsaWVudC5MUzJDX0VuZF9HYW1lX0Fjay5BY2tDb2RlEhgKEGRhaWx5",
            "UGFzc2VkQ291bnQYAiABKAUSGAoQdG90YWxQYXNzZWRDb3VudBgDIAEoBRIb",
            "ChNkYWlseUNoYWxsZW5nZUNvdW50GAQgASgFEiYKCXN0YWdlRGF0YRgFIAMo",
            "CzITLnByb3RvY29sLlN0YWdlRGF0YRIPCgdyZXdhcmRzGAYgAygFIjIKB0Fj",
            "a0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQARIQCgxJbnZhbGlkVG9rZW4Q",
            "AiKDAQoRTFMyQ19TZXRHdWlkZV9BY2sSOQoHYWNrQ29kZRgBIAEoDjIoLlNl",
            "cnZlcjJDbGllbnQuTFMyQ19TZXRHdWlkZV9BY2suQWNrQ29kZRIRCgljdXJy",
            "R3VpZGUYAiABKAUiIAoHQWNrQ29kZRIICgRGYWlsEAASCwoHU3VjY2VzcxAB",
            "IrgBCg5MUzJDX1NoYXJlX0FjaxI2CgdhY2tDb2RlGAEgASgOMiUuU2VydmVy",
            "MkNsaWVudC5MUzJDX1NoYXJlX0Fjay5BY2tDb2RlEjoKDml0ZW1TaGFyZWRJ",
            "bmZvGAIgAygLMiIuU2VydmVyMkNsaWVudC5Nb2RlSXRlbVNoYXJlZENvdW50",
            "IjIKB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQARIQCgxJbnZhbGlk",
            "VG9rZW4QAiJ8ChdMUzJDX1NldEd1aWRlRmluaXNoX0FjaxI/CgdhY2tDb2Rl",
            "GAEgASgOMi4uU2VydmVyMkNsaWVudC5MUzJDX1NldEd1aWRlRmluaXNoX0Fj",
            "ay5BY2tDb2RlIiAKB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQASKP",
            "AQoYTFMyQ19TZXROZXdiaWVGaW5pc2hfQWNrEkAKB2Fja0NvZGUYASABKA4y",
            "Ly5TZXJ2ZXIyQ2xpZW50LkxTMkNfU2V0TmV3YmllRmluaXNoX0Fjay5BY2tD",
            "b2RlEg8KB3Jld2FyZHMYAiADKAUiIAoHQWNrQ29kZRIICgRGYWlsEAASCwoH",
            "U3VjY2VzcxABIsUBChRMUzJDX1N0YXJ0TmV3YmllX0FjaxI8CgdhY2tDb2Rl",
            "GAEgASgOMisuU2VydmVyMkNsaWVudC5MUzJDX1N0YXJ0TmV3YmllX0Fjay5B",
            "Y2tDb2RlEjoKDml0ZW1TaGFyZWRJbmZvGAIgAygLMiIuU2VydmVyMkNsaWVu",
            "dC5Nb2RlSXRlbVNoYXJlZENvdW50EhEKCW1hdGNoU2VlZBgDIAEoBSIgCgdB",
            "Y2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEijgEKFUxTMkNfU2V0QXV0",
            "aG9yaXplX0FjaxI9CgdhY2tDb2RlGAEgASgOMiwuU2VydmVyMkNsaWVudC5M",
            "UzJDX1NldEF1dGhvcml6ZV9BY2suQWNrQ29kZRIUCgxpc0F1dGhvcml6ZWQY",
            "AiABKAgiIAoHQWNrQ29kZRIICgRGYWlsEAASCwoHU3VjY2VzcxABIloKCFNr",
            "aW5JbmZvEg4KBnNraW5JZBgBIAEoBRISCgpjcmVhdGVUaW1lGAIgASgDEg0K",
            "BWlzTmV3GAMgASgIEg4KBnJlYXNvbhgEIAEoCRILCgN1aWQYBSABKAkiOAoO",
            "U2tpbkNvbGxlY3Rpb24SJgoFc2tpbnMYASADKAsyFy5TZXJ2ZXIyQ2xpZW50",
            "LlNraW5JbmZvIqIDChdMUzJDX0dldERyZXNzVXBJbmZvX0FjaxI/CgdhY2tD",
            "b2RlGAEgASgOMi4uU2VydmVyMkNsaWVudC5MUzJDX0dldERyZXNzVXBJbmZv",
            "X0Fjay5BY2tDb2RlEkgKCXVzaW5nU2tpbhgCIAMoCzI1LlNlcnZlcjJDbGll",
            "bnQuTFMyQ19HZXREcmVzc1VwSW5mb19BY2suVXNpbmdTa2luRW50cnkSUgoO",
            "c2tpbkNvbGxlY3Rpb24YAyADKAsyOi5TZXJ2ZXIyQ2xpZW50LkxTMkNfR2V0",
            "RHJlc3NVcEluZm9fQWNrLlNraW5Db2xsZWN0aW9uRW50cnkaMAoOVXNpbmdT",
            "a2luRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ARpUChNT",
            "a2luQ29sbGVjdGlvbkVudHJ5EgsKA2tleRgBIAEoBRIsCgV2YWx1ZRgCIAEo",
            "CzIdLlNlcnZlcjJDbGllbnQuU2tpbkNvbGxlY3Rpb246AjgBIiAKB0Fja0Nv",
            "ZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQASJyChJMUzJDX1ZpZXdTa2luc19B",
            "Y2sSOgoHYWNrQ29kZRgBIAEoDjIpLlNlcnZlcjJDbGllbnQuTFMyQ19WaWV3",
            "U2tpbnNfQWNrLkFja0NvZGUiIAoHQWNrQ29kZRIICgRGYWlsEAASCwoHU3Vj",
            "Y2VzcxABIoQBChRMUzJDX1NraW5EcmVzc1VwX0FjaxI8CgdhY2tDb2RlGAEg",
            "ASgOMisuU2VydmVyMkNsaWVudC5MUzJDX1NraW5EcmVzc1VwX0Fjay5BY2tD",
            "b2RlIi4KB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQARIMCghXcm9u",
            "Z1BvcxACIn4KGExTMkNfU3luY0FjY291bnRJbmZvX0FjaxJACgdhY2tDb2Rl",
            "GAEgASgOMi8uU2VydmVyMkNsaWVudC5MUzJDX1N5bmNBY2NvdW50SW5mb19B",
            "Y2suQWNrQ29kZSIgCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEi",
            "wwEKClBsYXllckNhcmQSLAoMdXNlckJhc2VJbmZvGAEgASgLMhYucHJvdG9j",
            "b2wuVXNlckJhc2VJbmZvEhgKEGRhaWx5UGFzc2VkQ291bnQYAiABKAUSOwoJ",
            "dXNpbmdTa2luGAMgAygLMiguU2VydmVyMkNsaWVudC5QbGF5ZXJDYXJkLlVz",
            "aW5nU2tpbkVudHJ5GjAKDlVzaW5nU2tpbkVudHJ5EgsKA2tleRgBIAEoBRIN",
            "CgV2YWx1ZRgCIAEoBToCOAEiZAoIQ2FtcEluZm8SHQoEY2FtcBgBIAEoDjIP",
            "LnByb3RvY29sLkVDYW1wEg0KBXNjb3JlGAIgASgFEioKB3BsYXllcnMYAyAD",
            "KAsyGS5TZXJ2ZXIyQ2xpZW50LlBsYXllckNhcmQiVwoPVG9waWNCYXR0bGVQ",
            "YXRoEgoKAmlkGAEgASgFEhMKC3Bhc3NlZENvdW50GAIgASgFEhAKCHJld2Fy",
            "ZElkGAMgASgFEhEKCWlzQ2xhaW1lZBgEIAEoCCLMAgoZTFMyQ19HZXRUb3Bp",
            "Y0FjdGl2aXR5X0FjaxJBCgdhY2tDb2RlGAEgASgOMjAuU2VydmVyMkNsaWVu",
            "dC5MUzJDX0dldFRvcGljQWN0aXZpdHlfQWNrLkFja0NvZGUSLAoJb3duZXJD",
            "YXJkGAIgASgLMhkuU2VydmVyMkNsaWVudC5QbGF5ZXJDYXJkEiIKCW93bmVy",
            "Q2FtcBgDIAEoDjIPLnByb3RvY29sLkVDYW1wEhMKC3Bhc3NlZENvdW50GAQg",
            "ASgFEioKCWNhbXBzSW5mbxgFIAMoCzIXLlNlcnZlcjJDbGllbnQuQ2FtcElu",
            "Zm8SNwoPdG9waWNCYXR0bGVQYXRoGAYgAygLMh4uU2VydmVyMkNsaWVudC5U",
            "b3BpY0JhdHRsZVBhdGgiIAoHQWNrQ29kZRIICgRGYWlsEAASCwoHU3VjY2Vz",
            "cxABInQKE0xTMkNfU2VsZWN0Q2FtcF9BY2sSOwoHYWNrQ29kZRgBIAEoDjIq",
            "LlNlcnZlcjJDbGllbnQuTFMyQ19TZWxlY3RDYW1wX0Fjay5BY2tDb2RlIiAK",
            "B0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQASKzAQohTFMyQ19DbGFp",
            "bVRvcGljQWN0aXZpdHlSZXdhcmRfQWNrEkkKB2Fja0NvZGUYASABKA4yOC5T",
            "ZXJ2ZXIyQ2xpZW50LkxTMkNfQ2xhaW1Ub3BpY0FjdGl2aXR5UmV3YXJkX0Fj",
            "ay5BY2tDb2RlEhAKCHJld2FyZElkGAIgASgFIjEKB0Fja0NvZGUSCAoERmFp",
            "bBAAEgsKB1N1Y2Nlc3MQARIPCgtSZXBlYXRDbGFpbRACInsKGExTMkNfU2V0",
            "QWN0aXZpdHlGbGFnX0FjaxI9CgRjb2RlGAEgASgOMi8uU2VydmVyMkNsaWVu",
            "dC5MUzJDX1NldEFjdGl2aXR5RmxhZ19BY2suQWNrQ29kZSIgCgdBY2tDb2Rl",
            "EgsKB1N1Y2Nlc3MQABIICgRGYWlsEAEi7QEKH0xTMkNfR2V0VG9waWNBY3Rp",
            "dml0eVNldHRsZV9BY2sSRAoEY29kZRgBIAEoDjI2LlNlcnZlcjJDbGllbnQu",
            "TFMyQ19HZXRUb3BpY0FjdGl2aXR5U2V0dGxlX0Fjay5BY2tDb2RlEhIKCmFj",
            "dGl2aXR5SWQYAiABKAUSIgoJb3duZXJDYW1wGAMgASgOMg8ucHJvdG9jb2wu",
            "RUNhbXASKgoJY2FtcHNJbmZvGAQgAygLMhcuU2VydmVyMkNsaWVudC5DYW1w",
            "SW5mbyIgCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEifAoXTFMy",
            "Q19TaGFyZUpvaW5Hcm91cF9BY2sSPwoHYWNrQ29kZRgBIAEoDjIuLlNlcnZl",
            "cjJDbGllbnQuTFMyQ19TaGFyZUpvaW5Hcm91cF9BY2suQWNrQ29kZSIgCgdB",
            "Y2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEiqgEKGExTMkNfR2V0R3Jv",
            "dXBNZW1iZXJzX0FjaxJACgdhY2tDb2RlGAEgASgOMi8uU2VydmVyMkNsaWVu",
            "dC5MUzJDX0dldEdyb3VwTWVtYmVyc19BY2suQWNrQ29kZRIqCgdwbGF5ZXJz",
            "GAIgAygLMhkuU2VydmVyMkNsaWVudC5QbGF5ZXJDYXJkIiAKB0Fja0NvZGUS",
            "CAoERmFpbBAAEgsKB1N1Y2Nlc3MQASKCAQoaTFMyQ19SZW1vdmVHcm91cE1l",
            "bWJlcl9BY2sSQgoHYWNrQ29kZRgBIAEoDjIxLlNlcnZlcjJDbGllbnQuTFMy",
            "Q19SZW1vdmVHcm91cE1lbWJlcl9BY2suQWNrQ29kZSIgCgdBY2tDb2RlEggK",
            "BEZhaWwQABILCgdTdWNjZXNzEAEiogEKEUxTMkNfR2l2ZVNraW5fQWNrEjkK",
            "B2Fja0NvZGUYASABKA4yKC5TZXJ2ZXIyQ2xpZW50LkxTMkNfR2l2ZVNraW5f",
            "QWNrLkFja0NvZGUSEQoJc2hhcmVDb2RlGAIgASgJIj8KB0Fja0NvZGUSCAoE",
            "RmFpbBAAEgsKB1N1Y2Nlc3MQARIMCghOb3RFeGlzdBACEg8KC05vR2l2ZUNv",
            "dW50EAMijQIKFExTMkNfR2V0R2lmdFNraW5fQWNrEjwKB2Fja0NvZGUYASAB",
            "KA4yKy5TZXJ2ZXIyQ2xpZW50LkxTMkNfR2V0R2lmdFNraW5fQWNrLkFja0Nv",
            "ZGUSHAoEaXRlbRgCIAEoCzIOLnByb3RvY29sLkl0ZW0SLQoKcGxheWVyQ2Fy",
            "ZBgDIAEoCzIZLlNlcnZlcjJDbGllbnQuUGxheWVyQ2FyZCJqCgdBY2tDb2Rl",
            "EggKBEZhaWwQABILCgdTdWNjZXNzEAESDAoIQmVlblVzZWQQAhILCgdFeHBp",
            "cmVkEAMSCAoEU2VsZhAEEg8KC0FscmVhZHlIYXZlEAUSEgoOTm9SZWNlaXZl",
            "Q291bnQQBiKwAQoYTFMyQ19Db2xsZWN0R2lmdFNraW5fQWNrEkAKB2Fja0Nv",
            "ZGUYASABKA4yLy5TZXJ2ZXIyQ2xpZW50LkxTMkNfQ29sbGVjdEdpZnRTa2lu",
            "X0Fjay5BY2tDb2RlIlIKB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQ",
            "ARILCgdFeHBpcmVkEAISDwoLQWxyZWFkeUhhdmUQAxISCg5Ob1JlY2VpdmVD",
            "b3VudBAEIn0KBk5vdGljZRIQCghub3RpY2VJZBgBIAEoCRIoCgR0eXBlGAIg",
            "ASgOMhouU2VydmVyMkNsaWVudC5FTm90aWNlVHlwZRIpCgZzZW5kZXIYAyAB",
            "KAsyGS5TZXJ2ZXIyQ2xpZW50LlBsYXllckNhcmQSDAoEbWlzYxgEIAMoCSLc",
            "AQoWTFMyQ19HZXROb3RpY2VMaXN0X0FjaxI+CgdhY2tDb2RlGAEgASgOMi0u",
            "U2VydmVyMkNsaWVudC5MUzJDX0dldE5vdGljZUxpc3RfQWNrLkFja0NvZGUS",
            "GAoQY2FuR2l2ZVNraW5Db3VudBgCIAEoBRIbChNjYW5SZWNlaXZlU2tpbkNv",
            "dW50GAMgASgFEikKCm5vdGljZUxpc3QYBCADKAsyFS5TZXJ2ZXIyQ2xpZW50",
            "Lk5vdGljZSIgCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEidAoT",
            "TFMyQ19SZWFkTm90aWNlX0FjaxI7CgdhY2tDb2RlGAEgASgOMiouU2VydmVy",
            "MkNsaWVudC5MUzJDX1JlYWROb3RpY2VfQWNrLkFja0NvZGUiIAoHQWNrQ29k",
            "ZRIICgRGYWlsEAASCwoHU3VjY2VzcxABIqwBChtMUzJDX0dldEdpdmluZ1Nr",
            "aW5HaWZ0c19BY2sSQwoHYWNrQ29kZRgBIAEoDjIyLlNlcnZlcjJDbGllbnQu",
            "TFMyQ19HZXRHaXZpbmdTa2luR2lmdHNfQWNrLkFja0NvZGUSJgoOZ2l2aW5n",
            "U2tpbkxpc3QYAiADKAsyDi5wcm90b2NvbC5JdGVtIiAKB0Fja0NvZGUSCAoE",
            "RmFpbBAAEgsKB1N1Y2Nlc3MQASLpAQodTFMyQ19SZXZva2VHaXZpbmdTa2lu",
            "R2lmdF9BY2sSRQoHYWNrQ29kZRgBIAEoDjI0LlNlcnZlcjJDbGllbnQuTFMy",
            "Q19SZXZva2VHaXZpbmdTa2luR2lmdF9BY2suQWNrQ29kZRIYChBjYW5HaXZl",
            "U2tpbkNvdW50GAIgASgFEhsKE2NhblJlY2VpdmVTa2luQ291bnQYAyABKAUS",
            "GwoTbmV4dE1vbmRheVRpbWVzdGFtcBgEIAEoBSItCgdBY2tDb2RlEggKBEZh",
            "aWwQABILCgdTdWNjZXNzEAESCwoHSGFzU2VuZBACIsQBChxMUzJDX0dldE9m",
            "ZmljaWFsRnJlZVNraW5fQWNrEkQKB2Fja0NvZGUYASABKA4yMy5TZXJ2ZXIy",
            "Q2xpZW50LkxTMkNfR2V0T2ZmaWNpYWxGcmVlU2tpbl9BY2suQWNrQ29kZRIr",
            "CgpyZXdhcmRTa2luGAIgASgLMhcuU2VydmVyMkNsaWVudC5Ta2luSW5mbyIx",
            "CgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAESDwoLUmVwZWF0Q2xh",
            "aW0QAiKoAQoUTFMyQ19HaXZlU2tpbl9WMl9BY2sSPAoHYWNrQ29kZRgBIAEo",
            "DjIrLlNlcnZlcjJDbGllbnQuTFMyQ19HaXZlU2tpbl9WMl9BY2suQWNrQ29k",
            "ZRIRCglzaGFyZUNvZGUYAiABKAkiPwoHQWNrQ29kZRIICgRGYWlsEAASCwoH",
            "U3VjY2VzcxABEgwKCE5vdEV4aXN0EAISDwoLTm9HaXZlQ291bnQQAyKdAQoY",
            "TFMyQ19HaXZlU2tpbkNvbmZpcm1fQWNrEkAKB2Fja0NvZGUYASABKA4yLy5T",
            "ZXJ2ZXIyQ2xpZW50LkxTMkNfR2l2ZVNraW5Db25maXJtX0Fjay5BY2tDb2Rl",
            "Ij8KB0Fja0NvZGUSCAoERmFpbBAAEgsKB1N1Y2Nlc3MQARIMCghOb3RFeGlz",
            "dBACEg8KC05vR2l2ZUNvdW50EAQirgEKFExTMkNfTWFpbEdldExpc3RfQWNr",
            "EjwKB2Fja0NvZGUYASABKA4yKy5TZXJ2ZXIyQ2xpZW50LkxTMkNfTWFpbEdl",
            "dExpc3RfQWNrLkFja0NvZGUSJAoIbWFpbExpc3QYAiADKAsyEi5wcm90b2Nv",
            "bC5NYWlsRGF0YSIyCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAES",
            "EAoMT3JsZWFuc19GYWlsEAIiyAEKHExTMkNfTWFpbENsYWltQXR0YWNobWVu",
            "dF9BY2sSRAoHYWNrQ29kZRgBIAEoDjIzLlNlcnZlcjJDbGllbnQuTFMyQ19N",
            "YWlsQ2xhaW1BdHRhY2htZW50X0Fjay5BY2tDb2RlEg4KBm1haWxJZBgCIAEo",
            "CRIcCgRJdGVtGAMgAygLMg4ucHJvdG9jb2wuSXRlbSI0CgdBY2tDb2RlEggK",
            "BEZhaWwQABILCgdTdWNjZXNzEAESEgoOUGFydGlhbFN1Y2Nlc3MQAiKIAQoV",
            "TFMyQ19NYWlsTWFya1JlYWRfQWNrEj0KB2Fja0NvZGUYASABKA4yLC5TZXJ2",
            "ZXIyQ2xpZW50LkxTMkNfTWFpbE1hcmtSZWFkX0Fjay5BY2tDb2RlEg4KBm1h",
            "aWxJZBgCIAEoCSIgCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEi",
            "hAEKE0xTMkNfTWFpbERlbGV0ZV9BY2sSOwoHYWNrQ29kZRgBIAEoDjIqLlNl",
            "cnZlcjJDbGllbnQuTFMyQ19NYWlsRGVsZXRlX0Fjay5BY2tDb2RlEg4KBm1h",
            "aWxJZBgCIAEoCSIgCgdBY2tDb2RlEggKBEZhaWwQABILCgdTdWNjZXNzEAEq",
            "ngEKC0VOb3RpY2VUeXBlEggKBE5vbmUQABITCg9Ta2luR2lmdFN1Y2Nlc3MQ",
            "ARIfChtTa2luR2lmdEZhaWxfTm9SZWNlaXZlQ291bnQQAhIcChhTa2luR2lm",
            "dEZhaWxfQWxyZWFkeUhhdmUQAxIXChNTa2luR2lmdEZhaWxfUmVmdXNlEAQS",
            "GAoUU2tpbkdpZnRGYWlsX0V4cGlyZWQQBUITWhEuL25ldHdvcms7bmV0d29y",
            "a2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protocol.GameTagReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Server2Client.ENoticeType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.HeartBeatAckInfo), global::Server2Client.HeartBeatAckInfo.Parser, new[]{ "ServerTime" }, null, new[]{ typeof(global::Server2Client.HeartBeatAckInfo.Types.N) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.ActivityStatusInfo), global::Server2Client.ActivityStatusInfo.Parser, new[]{ "ActivityType", "ActivityId", "Status", "StartTime", "EndTime", "GmLevelCondition", "IsOpen", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.GetUserActivityDataAck), global::Server2Client.GetUserActivityDataAck.Parser, new[]{ "Code", "ActivityData" }, null, new[]{ typeof(global::Server2Client.GetUserActivityDataAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.ActivityConfig), global::Server2Client.ActivityConfig.Parser, new[]{ "ActivityId", "ActivityType", "EndTime", "ActivityConf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.ActivityProgress), global::Server2Client.ActivityProgress.Parser, new[]{ "ConditionType", "ConditionValue", "AwardList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.UserActivityInfo), global::Server2Client.UserActivityInfo.Parser, new[]{ "ActivityIndex", "Progress", "AwardProgress", "RefreshMark", "IndexEndTime", "ActivityConfig", "RealStartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.UserUnlockBlockListAck), global::Server2Client.UserUnlockBlockListAck.Parser, new[]{ "Code", "BlockList" }, null, new[]{ typeof(global::Server2Client.UserUnlockBlockListAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.UserBlockSlotsAck), global::Server2Client.UserBlockSlotsAck.Parser, new[]{ "Code", "BlockIdList", "TopicId" }, null, new[]{ typeof(global::Server2Client.UserBlockSlotsAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.ReqEquipBlockSlotAck), global::Server2Client.ReqEquipBlockSlotAck.Parser, new[]{ "Code" }, null, new[]{ typeof(global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.ResetBlockSlotAck), global::Server2Client.ResetBlockSlotAck.Parser, new[]{ "Code", "BlockIdList", "TopicId" }, null, new[]{ typeof(global::Server2Client.ResetBlockSlotAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.UnlockBlockListNewAck), global::Server2Client.UnlockBlockListNewAck.Parser, new[]{ "Code", "BlockList" }, null, new[]{ typeof(global::Server2Client.UnlockBlockListNewAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.EquipTopicBlockSlotsAck), global::Server2Client.EquipTopicBlockSlotsAck.Parser, new[]{ "Code", "BlockIdList", "TopicId" }, null, new[]{ typeof(global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.SendAwardAck), global::Server2Client.SendAwardAck.Parser, new[]{ "Code", "ItemList" }, null, new[]{ typeof(global::Server2Client.SendAwardAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.MailStateData), global::Server2Client.MailStateData.Parser, new[]{ "MailId", "HaveRead" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.GetMailStateListAck), global::Server2Client.GetMailStateListAck.Parser, new[]{ "Code", "MailState" }, null, new[]{ typeof(global::Server2Client.GetMailStateListAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetActivityStatusAck), global::Server2Client.LS2C_GetActivityStatusAck.Parser, new[]{ "Code", "ActivityStatusInfo", "GmLevel" }, null, new[]{ typeof(global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_DailyMatch_UseItem), global::Server2Client.LS2C_DailyMatch_UseItem.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SetAdCodeAck), global::Server2Client.LS2C_SetAdCodeAck.Parser, new[]{ "Code", "AdCode" }, null, new[]{ typeof(global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetAdCode), global::Server2Client.LS2C_GetAdCode.Parser, new[]{ "Code", "AdCode" }, null, new[]{ typeof(global::Server2Client.LS2C_GetAdCode.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_UserBaseInfo_Ack), global::Server2Client.LS2C_UserBaseInfo_Ack.Parser, new[]{ "AckCode", "UserInfo", "CharacterData", "Functions" }, null, new[]{ typeof(global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.ModeItemSharedCount), global::Server2Client.ModeItemSharedCount.Parser, new[]{ "ItemType", "LeftShareCounts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_Start_Game_Ack), global::Server2Client.LS2C_Start_Game_Ack.Parser, new[]{ "AckCode", "GameToken", "ItemSharedInfo", "DailyChallengeCount", "MatchSeed", "StageMd5" }, null, new[]{ typeof(global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_End_Game_Ack), global::Server2Client.LS2C_End_Game_Ack.Parser, new[]{ "AckCode", "DailyPassedCount", "TotalPassedCount", "DailyChallengeCount", "StageData", "Rewards" }, null, new[]{ typeof(global::Server2Client.LS2C_End_Game_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SetGuide_Ack), global::Server2Client.LS2C_SetGuide_Ack.Parser, new[]{ "AckCode", "CurrGuide" }, null, new[]{ typeof(global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_Share_Ack), global::Server2Client.LS2C_Share_Ack.Parser, new[]{ "AckCode", "ItemSharedInfo" }, null, new[]{ typeof(global::Server2Client.LS2C_Share_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SetGuideFinish_Ack), global::Server2Client.LS2C_SetGuideFinish_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SetNewbieFinish_Ack), global::Server2Client.LS2C_SetNewbieFinish_Ack.Parser, new[]{ "AckCode", "Rewards" }, null, new[]{ typeof(global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_StartNewbie_Ack), global::Server2Client.LS2C_StartNewbie_Ack.Parser, new[]{ "AckCode", "ItemSharedInfo", "MatchSeed" }, null, new[]{ typeof(global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SetAuthorize_Ack), global::Server2Client.LS2C_SetAuthorize_Ack.Parser, new[]{ "AckCode", "IsAuthorized" }, null, new[]{ typeof(global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.SkinInfo), global::Server2Client.SkinInfo.Parser, new[]{ "SkinId", "CreateTime", "IsNew", "Reason", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.SkinCollection), global::Server2Client.SkinCollection.Parser, new[]{ "Skins" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetDressUpInfo_Ack), global::Server2Client.LS2C_GetDressUpInfo_Ack.Parser, new[]{ "AckCode", "UsingSkin", "SkinCollection" }, null, new[]{ typeof(global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode) }, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_ViewSkins_Ack), global::Server2Client.LS2C_ViewSkins_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SkinDressUp_Ack), global::Server2Client.LS2C_SkinDressUp_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SyncAccountInfo_Ack), global::Server2Client.LS2C_SyncAccountInfo_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.PlayerCard), global::Server2Client.PlayerCard.Parser, new[]{ "UserBaseInfo", "DailyPassedCount", "UsingSkin" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.CampInfo), global::Server2Client.CampInfo.Parser, new[]{ "Camp", "Score", "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.TopicBattlePath), global::Server2Client.TopicBattlePath.Parser, new[]{ "Id", "PassedCount", "RewardId", "IsClaimed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetTopicActivity_Ack), global::Server2Client.LS2C_GetTopicActivity_Ack.Parser, new[]{ "AckCode", "OwnerCard", "OwnerCamp", "PassedCount", "CampsInfo", "TopicBattlePath" }, null, new[]{ typeof(global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SelectCamp_Ack), global::Server2Client.LS2C_SelectCamp_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_ClaimTopicActivityReward_Ack), global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Parser, new[]{ "AckCode", "RewardId" }, null, new[]{ typeof(global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_SetActivityFlag_Ack), global::Server2Client.LS2C_SetActivityFlag_Ack.Parser, new[]{ "Code" }, null, new[]{ typeof(global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetTopicActivitySettle_Ack), global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Parser, new[]{ "Code", "ActivityId", "OwnerCamp", "CampsInfo" }, null, new[]{ typeof(global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_ShareJoinGroup_Ack), global::Server2Client.LS2C_ShareJoinGroup_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetGroupMembers_Ack), global::Server2Client.LS2C_GetGroupMembers_Ack.Parser, new[]{ "AckCode", "Players" }, null, new[]{ typeof(global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_RemoveGroupMember_Ack), global::Server2Client.LS2C_RemoveGroupMember_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GiveSkin_Ack), global::Server2Client.LS2C_GiveSkin_Ack.Parser, new[]{ "AckCode", "ShareCode" }, null, new[]{ typeof(global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetGiftSkin_Ack), global::Server2Client.LS2C_GetGiftSkin_Ack.Parser, new[]{ "AckCode", "Item", "PlayerCard" }, null, new[]{ typeof(global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_CollectGiftSkin_Ack), global::Server2Client.LS2C_CollectGiftSkin_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.Notice), global::Server2Client.Notice.Parser, new[]{ "NoticeId", "Type", "Sender", "Misc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetNoticeList_Ack), global::Server2Client.LS2C_GetNoticeList_Ack.Parser, new[]{ "AckCode", "CanGiveSkinCount", "CanReceiveSkinCount", "NoticeList" }, null, new[]{ typeof(global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_ReadNotice_Ack), global::Server2Client.LS2C_ReadNotice_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetGivingSkinGifts_Ack), global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Parser, new[]{ "AckCode", "GivingSkinList" }, null, new[]{ typeof(global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_RevokeGivingSkinGift_Ack), global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Parser, new[]{ "AckCode", "CanGiveSkinCount", "CanReceiveSkinCount", "NextMondayTimestamp" }, null, new[]{ typeof(global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GetOfficialFreeSkin_Ack), global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Parser, new[]{ "AckCode", "RewardSkin" }, null, new[]{ typeof(global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GiveSkin_V2_Ack), global::Server2Client.LS2C_GiveSkin_V2_Ack.Parser, new[]{ "AckCode", "ShareCode" }, null, new[]{ typeof(global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_GiveSkinConfirm_Ack), global::Server2Client.LS2C_GiveSkinConfirm_Ack.Parser, new[]{ "AckCode" }, null, new[]{ typeof(global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_MailGetList_Ack), global::Server2Client.LS2C_MailGetList_Ack.Parser, new[]{ "AckCode", "MailList" }, null, new[]{ typeof(global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_MailClaimAttachment_Ack), global::Server2Client.LS2C_MailClaimAttachment_Ack.Parser, new[]{ "AckCode", "MailId", "Item" }, null, new[]{ typeof(global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_MailMarkRead_Ack), global::Server2Client.LS2C_MailMarkRead_Ack.Parser, new[]{ "AckCode", "MailId" }, null, new[]{ typeof(global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Server2Client.LS2C_MailDelete_Ack), global::Server2Client.LS2C_MailDelete_Ack.Parser, new[]{ "AckCode", "MailId" }, null, new[]{ typeof(global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ENoticeType {
    [pbr::OriginalName("None")] None = 0,
    /// <summary>
    /// 赠送皮肤成功 （misc：[皮肤唯一id，皮肤 id，reason]）
    /// </summary>
    [pbr::OriginalName("SkinGiftSuccess")] SkinGiftSuccess = 1,
    /// <summary>
    /// 没有领取次数（misc：[皮肤唯一id，皮肤 id，reason]）
    /// </summary>
    [pbr::OriginalName("SkinGiftFail_NoReceiveCount")] SkinGiftFailNoReceiveCount = 2,
    /// <summary>
    /// 已经拥有皮肤（misc：[皮肤唯一id，皮肤 id，reason]）
    /// </summary>
    [pbr::OriginalName("SkinGiftFail_AlreadyHave")] SkinGiftFailAlreadyHave = 3,
    /// <summary>
    /// 拒绝接受皮肤（misc：[皮肤唯一id，皮肤 id，reason]）
    /// </summary>
    [pbr::OriginalName("SkinGiftFail_Refuse")] SkinGiftFailRefuse = 4,
    /// <summary>
    /// 已过期（misc：[皮肤唯一id，皮肤 id，reason]）
    /// </summary>
    [pbr::OriginalName("SkinGiftFail_Expired")] SkinGiftFailExpired = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 服务器心跳返回
  /// </summary>
  public sealed partial class HeartBeatAckInfo : pb::IMessage<HeartBeatAckInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeartBeatAckInfo> _parser = new pb::MessageParser<HeartBeatAckInfo>(() => new HeartBeatAckInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HeartBeatAckInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeartBeatAckInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeartBeatAckInfo(HeartBeatAckInfo other) : this() {
      serverTime_ = other.serverTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HeartBeatAckInfo Clone() {
      return new HeartBeatAckInfo(this);
    }

    /// <summary>Field number for the "serverTime" field.</summary>
    public const int ServerTimeFieldNumber = 1;
    private long serverTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ServerTime {
      get { return serverTime_; }
      set {
        serverTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HeartBeatAckInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HeartBeatAckInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerTime != other.ServerTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServerTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ServerTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServerTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ServerTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ServerTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HeartBeatAckInfo other) {
      if (other == null) {
        return;
      }
      if (other.ServerTime != 0L) {
        ServerTime = other.ServerTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ServerTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the HeartBeatAckInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum N {
        [pbr::OriginalName("zero")] Zero = 0,
        [pbr::OriginalName("OpCode")] OpCode = 1002,
      }

    }
    #endregion

  }

  /// <summary>
  /// 活动状态数据
  /// </summary>
  public sealed partial class ActivityStatusInfo : pb::IMessage<ActivityStatusInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityStatusInfo> _parser = new pb::MessageParser<ActivityStatusInfo>(() => new ActivityStatusInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityStatusInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityStatusInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityStatusInfo(ActivityStatusInfo other) : this() {
      activityType_ = other.activityType_;
      activityId_ = other.activityId_;
      status_ = other.status_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      gmLevelCondition_ = other.gmLevelCondition_;
      isOpen_ = other.isOpen_;
      flags_ = other.flags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityStatusInfo Clone() {
      return new ActivityStatusInfo(this);
    }

    /// <summary>Field number for the "activityType" field.</summary>
    public const int ActivityTypeFieldNumber = 1;
    private global::Protocol.EActivityType activityType_ = global::Protocol.EActivityType.InvalidActivity;
    /// <summary>
    ///活动类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.EActivityType ActivityType {
      get { return activityType_; }
      set {
        activityType_ = value;
      }
    }

    /// <summary>Field number for the "activityId" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private int activityId_;
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Protocol.EActivityStatus status_ = global::Protocol.EActivityStatus.Default;
    /// <summary>
    ///活动状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.EActivityStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private long startTime_;
    /// <summary>
    ///此阶段开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private long endTime_;
    /// <summary>
    ///此阶段结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "gmLevelCondition" field.</summary>
    public const int GmLevelConditionFieldNumber = 6;
    private int gmLevelCondition_;
    /// <summary>
    /// 活动的可见条件(用户级别)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GmLevelCondition {
      get { return gmLevelCondition_; }
      set {
        gmLevelCondition_ = value;
      }
    }

    /// <summary>Field number for the "isOpen" field.</summary>
    public const int IsOpenFieldNumber = 7;
    private bool isOpen_;
    /// <summary>
    /// 是否开启
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_flags_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> flags_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 玩家flag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Flags {
      get { return flags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityStatusInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityStatusInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityType != other.ActivityType) return false;
      if (ActivityId != other.ActivityId) return false;
      if (Status != other.Status) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (GmLevelCondition != other.GmLevelCondition) return false;
      if (IsOpen != other.IsOpen) return false;
      if(!flags_.Equals(other.flags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) hash ^= ActivityType.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (Status != global::Protocol.EActivityStatus.Default) hash ^= Status.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (GmLevelCondition != 0) hash ^= GmLevelCondition.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      hash ^= flags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ActivityType);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActivityId);
      }
      if (Status != global::Protocol.EActivityStatus.Default) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTime);
      }
      if (GmLevelCondition != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GmLevelCondition);
      }
      if (IsOpen != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsOpen);
      }
      flags_.WriteTo(output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ActivityType);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActivityId);
      }
      if (Status != global::Protocol.EActivityStatus.Default) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTime);
      }
      if (GmLevelCondition != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GmLevelCondition);
      }
      if (IsOpen != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsOpen);
      }
      flags_.WriteTo(ref output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActivityType);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivityId);
      }
      if (Status != global::Protocol.EActivityStatus.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (GmLevelCondition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GmLevelCondition);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      size += flags_.CalculateSize(_repeated_flags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityStatusInfo other) {
      if (other == null) {
        return;
      }
      if (other.ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        ActivityType = other.ActivityType;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.Status != global::Protocol.EActivityStatus.Default) {
        Status = other.Status;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.GmLevelCondition != 0) {
        GmLevelCondition = other.GmLevelCondition;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      flags_.Add(other.flags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityType = (global::Protocol.EActivityType) input.ReadEnum();
            break;
          }
          case 16: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 24: {
            Status = (global::Protocol.EActivityStatus) input.ReadEnum();
            break;
          }
          case 32: {
            StartTime = input.ReadInt64();
            break;
          }
          case 40: {
            EndTime = input.ReadInt64();
            break;
          }
          case 48: {
            GmLevelCondition = input.ReadInt32();
            break;
          }
          case 56: {
            IsOpen = input.ReadBool();
            break;
          }
          case 66:
          case 64: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityType = (global::Protocol.EActivityType) input.ReadEnum();
            break;
          }
          case 16: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 24: {
            Status = (global::Protocol.EActivityStatus) input.ReadEnum();
            break;
          }
          case 32: {
            StartTime = input.ReadInt64();
            break;
          }
          case 40: {
            EndTime = input.ReadInt64();
            break;
          }
          case 48: {
            GmLevelCondition = input.ReadInt32();
            break;
          }
          case 56: {
            IsOpen = input.ReadBool();
            break;
          }
          case 66:
          case 64: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserActivityDataAck : pb::IMessage<GetUserActivityDataAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserActivityDataAck> _parser = new pb::MessageParser<GetUserActivityDataAck>(() => new GetUserActivityDataAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserActivityDataAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserActivityDataAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserActivityDataAck(GetUserActivityDataAck other) : this() {
      code_ = other.code_;
      activityData_ = other.activityData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserActivityDataAck Clone() {
      return new GetUserActivityDataAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.GetUserActivityDataAck.Types.AckCode code_ = global::Server2Client.GetUserActivityDataAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.GetUserActivityDataAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "activityData" field.</summary>
    public const int ActivityDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Server2Client.UserActivityInfo> _repeated_activityData_codec
        = pb::FieldCodec.ForMessage(18, global::Server2Client.UserActivityInfo.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.UserActivityInfo> activityData_ = new pbc::RepeatedField<global::Server2Client.UserActivityInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.UserActivityInfo> ActivityData {
      get { return activityData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserActivityDataAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserActivityDataAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!activityData_.Equals(other.activityData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.GetUserActivityDataAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= activityData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.GetUserActivityDataAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      activityData_.WriteTo(output, _repeated_activityData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.GetUserActivityDataAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      activityData_.WriteTo(ref output, _repeated_activityData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.GetUserActivityDataAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += activityData_.CalculateSize(_repeated_activityData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserActivityDataAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.GetUserActivityDataAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      activityData_.Add(other.activityData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.GetUserActivityDataAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            activityData_.AddEntriesFrom(input, _repeated_activityData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.GetUserActivityDataAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            activityData_.AddEntriesFrom(ref input, _repeated_activityData_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetUserActivityDataAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 参数无效
        /// </summary>
        [pbr::OriginalName("ParamsErr")] ParamsErr = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 活动的配置信息
  /// </summary>
  public sealed partial class ActivityConfig : pb::IMessage<ActivityConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityConfig> _parser = new pb::MessageParser<ActivityConfig>(() => new ActivityConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityConfig(ActivityConfig other) : this() {
      activityId_ = other.activityId_;
      activityType_ = other.activityType_;
      endTime_ = other.endTime_;
      activityConf_ = other.activityConf_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityConfig Clone() {
      return new ActivityConfig(this);
    }

    /// <summary>Field number for the "activityId" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private int activityId_;
    /// <summary>
    ///活动Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "activityType" field.</summary>
    public const int ActivityTypeFieldNumber = 2;
    private global::Protocol.EActivityType activityType_ = global::Protocol.EActivityType.InvalidActivity;
    /// <summary>
    /// 活动类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.EActivityType ActivityType {
      get { return activityType_; }
      set {
        activityType_ = value;
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private int endTime_;
    /// <summary>
    /// 活动结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "activityConf" field.</summary>
    public const int ActivityConfFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Server2Client.ActivityProgress> _repeated_activityConf_codec
        = pb::FieldCodec.ForMessage(34, global::Server2Client.ActivityProgress.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.ActivityProgress> activityConf_ = new pbc::RepeatedField<global::Server2Client.ActivityProgress>();
    /// <summary>
    /// 活动的配置信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.ActivityProgress> ActivityConf {
      get { return activityConf_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (ActivityType != other.ActivityType) return false;
      if (EndTime != other.EndTime) return false;
      if(!activityConf_.Equals(other.activityConf_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) hash ^= ActivityType.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      hash ^= activityConf_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActivityId);
      }
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActivityType);
      }
      if (EndTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndTime);
      }
      activityConf_.WriteTo(output, _repeated_activityConf_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActivityId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActivityId);
      }
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActivityType);
      }
      if (EndTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndTime);
      }
      activityConf_.WriteTo(ref output, _repeated_activityConf_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivityId);
      }
      if (ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActivityType);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      size += activityConf_.CalculateSize(_repeated_activityConf_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityConfig other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.ActivityType != global::Protocol.EActivityType.InvalidActivity) {
        ActivityType = other.ActivityType;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      activityConf_.Add(other.activityConf_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 16: {
            ActivityType = (global::Protocol.EActivityType) input.ReadEnum();
            break;
          }
          case 24: {
            EndTime = input.ReadInt32();
            break;
          }
          case 34: {
            activityConf_.AddEntriesFrom(input, _repeated_activityConf_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 16: {
            ActivityType = (global::Protocol.EActivityType) input.ReadEnum();
            break;
          }
          case 24: {
            EndTime = input.ReadInt32();
            break;
          }
          case 34: {
            activityConf_.AddEntriesFrom(ref input, _repeated_activityConf_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityProgress : pb::IMessage<ActivityProgress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityProgress> _parser = new pb::MessageParser<ActivityProgress>(() => new ActivityProgress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityProgress(ActivityProgress other) : this() {
      conditionType_ = other.conditionType_;
      conditionValue_ = other.conditionValue_;
      awardList_ = other.awardList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityProgress Clone() {
      return new ActivityProgress(this);
    }

    /// <summary>Field number for the "conditionType" field.</summary>
    public const int ConditionTypeFieldNumber = 1;
    private int conditionType_;
    /// <summary>
    /// 达成条件类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConditionType {
      get { return conditionType_; }
      set {
        conditionType_ = value;
      }
    }

    /// <summary>Field number for the "conditionValue" field.</summary>
    public const int ConditionValueFieldNumber = 2;
    private int conditionValue_;
    /// <summary>
    /// 达成条件值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConditionValue {
      get { return conditionValue_; }
      set {
        conditionValue_ = value;
      }
    }

    /// <summary>Field number for the "awardList" field.</summary>
    public const int AwardListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protocol.AwardInfo> _repeated_awardList_codec
        = pb::FieldCodec.ForMessage(26, global::Protocol.AwardInfo.Parser);
    private readonly pbc::RepeatedField<global::Protocol.AwardInfo> awardList_ = new pbc::RepeatedField<global::Protocol.AwardInfo>();
    /// <summary>
    ///奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.AwardInfo> AwardList {
      get { return awardList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConditionType != other.ConditionType) return false;
      if (ConditionValue != other.ConditionValue) return false;
      if(!awardList_.Equals(other.awardList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ConditionType != 0) hash ^= ConditionType.GetHashCode();
      if (ConditionValue != 0) hash ^= ConditionValue.GetHashCode();
      hash ^= awardList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConditionType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConditionType);
      }
      if (ConditionValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConditionValue);
      }
      awardList_.WriteTo(output, _repeated_awardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConditionType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConditionType);
      }
      if (ConditionValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConditionValue);
      }
      awardList_.WriteTo(ref output, _repeated_awardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ConditionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConditionType);
      }
      if (ConditionValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConditionValue);
      }
      size += awardList_.CalculateSize(_repeated_awardList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityProgress other) {
      if (other == null) {
        return;
      }
      if (other.ConditionType != 0) {
        ConditionType = other.ConditionType;
      }
      if (other.ConditionValue != 0) {
        ConditionValue = other.ConditionValue;
      }
      awardList_.Add(other.awardList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConditionType = input.ReadInt32();
            break;
          }
          case 16: {
            ConditionValue = input.ReadInt32();
            break;
          }
          case 26: {
            awardList_.AddEntriesFrom(input, _repeated_awardList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConditionType = input.ReadInt32();
            break;
          }
          case 16: {
            ConditionValue = input.ReadInt32();
            break;
          }
          case 26: {
            awardList_.AddEntriesFrom(ref input, _repeated_awardList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 活动数据
  /// </summary>
  public sealed partial class UserActivityInfo : pb::IMessage<UserActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserActivityInfo> _parser = new pb::MessageParser<UserActivityInfo>(() => new UserActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserActivityInfo(UserActivityInfo other) : this() {
      activityIndex_ = other.activityIndex_;
      progress_ = other.progress_;
      awardProgress_ = other.awardProgress_;
      refreshMark_ = other.refreshMark_;
      indexEndTime_ = other.indexEndTime_;
      activityConfig_ = other.activityConfig_ != null ? other.activityConfig_.Clone() : null;
      realStartTime_ = other.realStartTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserActivityInfo Clone() {
      return new UserActivityInfo(this);
    }

    /// <summary>Field number for the "activityIndex" field.</summary>
    public const int ActivityIndexFieldNumber = 1;
    private int activityIndex_;
    /// <summary>
    ///活动期数，第 N 期活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActivityIndex {
      get { return activityIndex_; }
      set {
        activityIndex_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private int progress_;
    /// <summary>
    ///活动的完成进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "awardProgress" field.</summary>
    public const int AwardProgressFieldNumber = 3;
    private int awardProgress_;
    /// <summary>
    ///活动的奖励进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardProgress {
      get { return awardProgress_; }
      set {
        awardProgress_ = value;
      }
    }

    /// <summary>Field number for the "refreshMark" field.</summary>
    public const int RefreshMarkFieldNumber = 4;
    private int refreshMark_;
    /// <summary>
    ///活动刷新标记
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RefreshMark {
      get { return refreshMark_; }
      set {
        refreshMark_ = value;
      }
    }

    /// <summary>Field number for the "indexEndTime" field.</summary>
    public const int IndexEndTimeFieldNumber = 5;
    private int indexEndTime_;
    /// <summary>
    ///本期活动结束时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IndexEndTime {
      get { return indexEndTime_; }
      set {
        indexEndTime_ = value;
      }
    }

    /// <summary>Field number for the "activityConfig" field.</summary>
    public const int ActivityConfigFieldNumber = 6;
    private global::Server2Client.ActivityConfig activityConfig_;
    /// <summary>
    /// 活动的配置信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.ActivityConfig ActivityConfig {
      get { return activityConfig_; }
      set {
        activityConfig_ = value;
      }
    }

    /// <summary>Field number for the "realStartTime" field.</summary>
    public const int RealStartTimeFieldNumber = 7;
    private long realStartTime_;
    /// <summary>
    ///活动真正开启时间（用于活动预告）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RealStartTime {
      get { return realStartTime_; }
      set {
        realStartTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityIndex != other.ActivityIndex) return false;
      if (Progress != other.Progress) return false;
      if (AwardProgress != other.AwardProgress) return false;
      if (RefreshMark != other.RefreshMark) return false;
      if (IndexEndTime != other.IndexEndTime) return false;
      if (!object.Equals(ActivityConfig, other.ActivityConfig)) return false;
      if (RealStartTime != other.RealStartTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityIndex != 0) hash ^= ActivityIndex.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (AwardProgress != 0) hash ^= AwardProgress.GetHashCode();
      if (RefreshMark != 0) hash ^= RefreshMark.GetHashCode();
      if (IndexEndTime != 0) hash ^= IndexEndTime.GetHashCode();
      if (activityConfig_ != null) hash ^= ActivityConfig.GetHashCode();
      if (RealStartTime != 0L) hash ^= RealStartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActivityIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActivityIndex);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      if (AwardProgress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardProgress);
      }
      if (RefreshMark != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RefreshMark);
      }
      if (IndexEndTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IndexEndTime);
      }
      if (activityConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActivityConfig);
      }
      if (RealStartTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RealStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActivityIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActivityIndex);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      if (AwardProgress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardProgress);
      }
      if (RefreshMark != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RefreshMark);
      }
      if (IndexEndTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IndexEndTime);
      }
      if (activityConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActivityConfig);
      }
      if (RealStartTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RealStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActivityIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivityIndex);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (AwardProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardProgress);
      }
      if (RefreshMark != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RefreshMark);
      }
      if (IndexEndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IndexEndTime);
      }
      if (activityConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityConfig);
      }
      if (RealStartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RealStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.ActivityIndex != 0) {
        ActivityIndex = other.ActivityIndex;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      if (other.AwardProgress != 0) {
        AwardProgress = other.AwardProgress;
      }
      if (other.RefreshMark != 0) {
        RefreshMark = other.RefreshMark;
      }
      if (other.IndexEndTime != 0) {
        IndexEndTime = other.IndexEndTime;
      }
      if (other.activityConfig_ != null) {
        if (activityConfig_ == null) {
          ActivityConfig = new global::Server2Client.ActivityConfig();
        }
        ActivityConfig.MergeFrom(other.ActivityConfig);
      }
      if (other.RealStartTime != 0L) {
        RealStartTime = other.RealStartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
          case 24: {
            AwardProgress = input.ReadInt32();
            break;
          }
          case 32: {
            RefreshMark = input.ReadInt32();
            break;
          }
          case 40: {
            IndexEndTime = input.ReadInt32();
            break;
          }
          case 50: {
            if (activityConfig_ == null) {
              ActivityConfig = new global::Server2Client.ActivityConfig();
            }
            input.ReadMessage(ActivityConfig);
            break;
          }
          case 56: {
            RealStartTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
          case 24: {
            AwardProgress = input.ReadInt32();
            break;
          }
          case 32: {
            RefreshMark = input.ReadInt32();
            break;
          }
          case 40: {
            IndexEndTime = input.ReadInt32();
            break;
          }
          case 50: {
            if (activityConfig_ == null) {
              ActivityConfig = new global::Server2Client.ActivityConfig();
            }
            input.ReadMessage(ActivityConfig);
            break;
          }
          case 56: {
            RealStartTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 返回已解锁砖块列表
  /// </summary>
  public sealed partial class UserUnlockBlockListAck : pb::IMessage<UserUnlockBlockListAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserUnlockBlockListAck> _parser = new pb::MessageParser<UserUnlockBlockListAck>(() => new UserUnlockBlockListAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserUnlockBlockListAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserUnlockBlockListAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserUnlockBlockListAck(UserUnlockBlockListAck other) : this() {
      code_ = other.code_;
      blockList_ = other.blockList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserUnlockBlockListAck Clone() {
      return new UserUnlockBlockListAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.UserUnlockBlockListAck.Types.AckCode code_ = global::Server2Client.UserUnlockBlockListAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.UserUnlockBlockListAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "blockList" field.</summary>
    public const int BlockListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protocol.BlockData> _repeated_blockList_codec
        = pb::FieldCodec.ForMessage(18, global::Protocol.BlockData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.BlockData> blockList_ = new pbc::RepeatedField<global::Protocol.BlockData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.BlockData> BlockList {
      get { return blockList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserUnlockBlockListAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserUnlockBlockListAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!blockList_.Equals(other.blockList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.UserUnlockBlockListAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= blockList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.UserUnlockBlockListAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockList_.WriteTo(output, _repeated_blockList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.UserUnlockBlockListAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockList_.WriteTo(ref output, _repeated_blockList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.UserUnlockBlockListAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += blockList_.CalculateSize(_repeated_blockList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserUnlockBlockListAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.UserUnlockBlockListAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      blockList_.Add(other.blockList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.UserUnlockBlockListAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            blockList_.AddEntriesFrom(input, _repeated_blockList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.UserUnlockBlockListAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            blockList_.AddEntriesFrom(ref input, _repeated_blockList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserUnlockBlockListAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 参数无效
        /// </summary>
        [pbr::OriginalName("ParamsErr")] ParamsErr = 2,
        /// <summary>
        /// 数据为空
        /// </summary>
        [pbr::OriginalName("NoDate")] NoDate = 3,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回砖块装备位信息
  /// </summary>
  public sealed partial class UserBlockSlotsAck : pb::IMessage<UserBlockSlotsAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserBlockSlotsAck> _parser = new pb::MessageParser<UserBlockSlotsAck>(() => new UserBlockSlotsAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserBlockSlotsAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserBlockSlotsAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserBlockSlotsAck(UserBlockSlotsAck other) : this() {
      code_ = other.code_;
      blockIdList_ = other.blockIdList_.Clone();
      topicId_ = other.topicId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserBlockSlotsAck Clone() {
      return new UserBlockSlotsAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.UserBlockSlotsAck.Types.AckCode code_ = global::Server2Client.UserBlockSlotsAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.UserBlockSlotsAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "blockIdList" field.</summary>
    public const int BlockIdListFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_blockIdList_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> blockIdList_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///砖块装备位信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> BlockIdList {
      get { return blockIdList_; }
    }

    /// <summary>Field number for the "topicId" field.</summary>
    public const int TopicIdFieldNumber = 3;
    private int topicId_;
    /// <summary>
    /// 装备的主题ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TopicId {
      get { return topicId_; }
      set {
        topicId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserBlockSlotsAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserBlockSlotsAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!blockIdList_.Equals(other.blockIdList_)) return false;
      if (TopicId != other.TopicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.UserBlockSlotsAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= blockIdList_.GetHashCode();
      if (TopicId != 0) hash ^= TopicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.UserBlockSlotsAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockIdList_.WriteTo(output, _repeated_blockIdList_codec);
      if (TopicId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TopicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.UserBlockSlotsAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockIdList_.WriteTo(ref output, _repeated_blockIdList_codec);
      if (TopicId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TopicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.UserBlockSlotsAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += blockIdList_.CalculateSize(_repeated_blockIdList_codec);
      if (TopicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserBlockSlotsAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.UserBlockSlotsAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      blockIdList_.Add(other.blockIdList_);
      if (other.TopicId != 0) {
        TopicId = other.TopicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.UserBlockSlotsAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            blockIdList_.AddEntriesFrom(input, _repeated_blockIdList_codec);
            break;
          }
          case 24: {
            TopicId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.UserBlockSlotsAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            blockIdList_.AddEntriesFrom(ref input, _repeated_blockIdList_codec);
            break;
          }
          case 24: {
            TopicId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserBlockSlotsAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 参数无效
        /// </summary>
        [pbr::OriginalName("ParamsErr")] ParamsErr = 2,
        /// <summary>
        /// 数据为空
        /// </summary>
        [pbr::OriginalName("NoDate")] NoDate = 3,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回装备砖块消息
  /// </summary>
  public sealed partial class ReqEquipBlockSlotAck : pb::IMessage<ReqEquipBlockSlotAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReqEquipBlockSlotAck> _parser = new pb::MessageParser<ReqEquipBlockSlotAck>(() => new ReqEquipBlockSlotAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReqEquipBlockSlotAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReqEquipBlockSlotAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReqEquipBlockSlotAck(ReqEquipBlockSlotAck other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReqEquipBlockSlotAck Clone() {
      return new ReqEquipBlockSlotAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode code_ = global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReqEquipBlockSlotAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReqEquipBlockSlotAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReqEquipBlockSlotAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.ReqEquipBlockSlotAck.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReqEquipBlockSlotAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 参数无效
        /// </summary>
        [pbr::OriginalName("ParamsErr")] ParamsErr = 2,
        /// <summary>
        /// 砖块已经装备
        /// </summary>
        [pbr::OriginalName("Repeated")] Repeated = 3,
        /// <summary>
        /// 砖块未解锁
        /// </summary>
        [pbr::OriginalName("Locked")] Locked = 4,
        /// <summary>
        /// 砖块槽位数据为空
        /// </summary>
        [pbr::OriginalName("NoDate")] NoDate = 5,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回重置砖块消息
  /// </summary>
  public sealed partial class ResetBlockSlotAck : pb::IMessage<ResetBlockSlotAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResetBlockSlotAck> _parser = new pb::MessageParser<ResetBlockSlotAck>(() => new ResetBlockSlotAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResetBlockSlotAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetBlockSlotAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetBlockSlotAck(ResetBlockSlotAck other) : this() {
      code_ = other.code_;
      blockIdList_ = other.blockIdList_.Clone();
      topicId_ = other.topicId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetBlockSlotAck Clone() {
      return new ResetBlockSlotAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.ResetBlockSlotAck.Types.AckCode code_ = global::Server2Client.ResetBlockSlotAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.ResetBlockSlotAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "blockIdList" field.</summary>
    public const int BlockIdListFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_blockIdList_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> blockIdList_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> BlockIdList {
      get { return blockIdList_; }
    }

    /// <summary>Field number for the "topicId" field.</summary>
    public const int TopicIdFieldNumber = 3;
    private int topicId_;
    /// <summary>
    /// 装备的主题ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TopicId {
      get { return topicId_; }
      set {
        topicId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResetBlockSlotAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResetBlockSlotAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!blockIdList_.Equals(other.blockIdList_)) return false;
      if (TopicId != other.TopicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.ResetBlockSlotAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= blockIdList_.GetHashCode();
      if (TopicId != 0) hash ^= TopicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.ResetBlockSlotAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockIdList_.WriteTo(output, _repeated_blockIdList_codec);
      if (TopicId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TopicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.ResetBlockSlotAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockIdList_.WriteTo(ref output, _repeated_blockIdList_codec);
      if (TopicId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TopicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.ResetBlockSlotAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += blockIdList_.CalculateSize(_repeated_blockIdList_codec);
      if (TopicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResetBlockSlotAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.ResetBlockSlotAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      blockIdList_.Add(other.blockIdList_);
      if (other.TopicId != 0) {
        TopicId = other.TopicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.ResetBlockSlotAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            blockIdList_.AddEntriesFrom(input, _repeated_blockIdList_codec);
            break;
          }
          case 24: {
            TopicId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.ResetBlockSlotAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            blockIdList_.AddEntriesFrom(ref input, _repeated_blockIdList_codec);
            break;
          }
          case 24: {
            TopicId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ResetBlockSlotAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 参数无效
        /// </summary>
        [pbr::OriginalName("ParamsErr")] ParamsErr = 2,
        /// <summary>
        /// 数据为空
        /// </summary>
        [pbr::OriginalName("NoDate")] NoDate = 3,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回已解锁砖块列表
  /// </summary>
  public sealed partial class UnlockBlockListNewAck : pb::IMessage<UnlockBlockListNewAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnlockBlockListNewAck> _parser = new pb::MessageParser<UnlockBlockListNewAck>(() => new UnlockBlockListNewAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnlockBlockListNewAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockBlockListNewAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockBlockListNewAck(UnlockBlockListNewAck other) : this() {
      code_ = other.code_;
      blockList_ = other.blockList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockBlockListNewAck Clone() {
      return new UnlockBlockListNewAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.UnlockBlockListNewAck.Types.AckCode code_ = global::Server2Client.UnlockBlockListNewAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.UnlockBlockListNewAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "blockList" field.</summary>
    public const int BlockListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protocol.BlockData> _repeated_blockList_codec
        = pb::FieldCodec.ForMessage(18, global::Protocol.BlockData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.BlockData> blockList_ = new pbc::RepeatedField<global::Protocol.BlockData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.BlockData> BlockList {
      get { return blockList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnlockBlockListNewAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnlockBlockListNewAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!blockList_.Equals(other.blockList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.UnlockBlockListNewAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= blockList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.UnlockBlockListNewAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockList_.WriteTo(output, _repeated_blockList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.UnlockBlockListNewAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockList_.WriteTo(ref output, _repeated_blockList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.UnlockBlockListNewAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += blockList_.CalculateSize(_repeated_blockList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnlockBlockListNewAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.UnlockBlockListNewAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      blockList_.Add(other.blockList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.UnlockBlockListNewAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            blockList_.AddEntriesFrom(input, _repeated_blockList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.UnlockBlockListNewAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            blockList_.AddEntriesFrom(ref input, _repeated_blockList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UnlockBlockListNewAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 参数无效
        /// </summary>
        [pbr::OriginalName("ParamsErr")] ParamsErr = 2,
        /// <summary>
        /// 数据为空
        /// </summary>
        [pbr::OriginalName("NoDate")] NoDate = 3,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 装备指定主题的砖块
  /// </summary>
  public sealed partial class EquipTopicBlockSlotsAck : pb::IMessage<EquipTopicBlockSlotsAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EquipTopicBlockSlotsAck> _parser = new pb::MessageParser<EquipTopicBlockSlotsAck>(() => new EquipTopicBlockSlotsAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EquipTopicBlockSlotsAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipTopicBlockSlotsAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipTopicBlockSlotsAck(EquipTopicBlockSlotsAck other) : this() {
      code_ = other.code_;
      blockIdList_ = other.blockIdList_.Clone();
      topicId_ = other.topicId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipTopicBlockSlotsAck Clone() {
      return new EquipTopicBlockSlotsAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode code_ = global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "blockIdList" field.</summary>
    public const int BlockIdListFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_blockIdList_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> blockIdList_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> BlockIdList {
      get { return blockIdList_; }
    }

    /// <summary>Field number for the "topicId" field.</summary>
    public const int TopicIdFieldNumber = 3;
    private int topicId_;
    /// <summary>
    /// 装备的主题ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TopicId {
      get { return topicId_; }
      set {
        topicId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EquipTopicBlockSlotsAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EquipTopicBlockSlotsAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!blockIdList_.Equals(other.blockIdList_)) return false;
      if (TopicId != other.TopicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= blockIdList_.GetHashCode();
      if (TopicId != 0) hash ^= TopicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockIdList_.WriteTo(output, _repeated_blockIdList_codec);
      if (TopicId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TopicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      blockIdList_.WriteTo(ref output, _repeated_blockIdList_codec);
      if (TopicId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TopicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += blockIdList_.CalculateSize(_repeated_blockIdList_codec);
      if (TopicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EquipTopicBlockSlotsAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      blockIdList_.Add(other.blockIdList_);
      if (other.TopicId != 0) {
        TopicId = other.TopicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            blockIdList_.AddEntriesFrom(input, _repeated_blockIdList_codec);
            break;
          }
          case 24: {
            TopicId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.EquipTopicBlockSlotsAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            blockIdList_.AddEntriesFrom(ref input, _repeated_blockIdList_codec);
            break;
          }
          case 24: {
            TopicId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EquipTopicBlockSlotsAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 参数无效
        /// </summary>
        [pbr::OriginalName("ParamsErr")] ParamsErr = 2,
        /// <summary>
        /// 数据为空
        /// </summary>
        [pbr::OriginalName("NoDate")] NoDate = 3,
        /// <summary>
        /// 砖块未解锁
        /// </summary>
        [pbr::OriginalName("Locked")] Locked = 4,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 5,
      }

    }
    #endregion

  }

  public sealed partial class SendAwardAck : pb::IMessage<SendAwardAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendAwardAck> _parser = new pb::MessageParser<SendAwardAck>(() => new SendAwardAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SendAwardAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SendAwardAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SendAwardAck(SendAwardAck other) : this() {
      code_ = other.code_;
      itemList_ = other.itemList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SendAwardAck Clone() {
      return new SendAwardAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.SendAwardAck.Types.AckCode code_ = global::Server2Client.SendAwardAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.SendAwardAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "itemList" field.</summary>
    public const int ItemListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protocol.Item> _repeated_itemList_codec
        = pb::FieldCodec.ForMessage(18, global::Protocol.Item.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Item> itemList_ = new pbc::RepeatedField<global::Protocol.Item>();
    /// <summary>
    ///新生成的item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.Item> ItemList {
      get { return itemList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SendAwardAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SendAwardAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!itemList_.Equals(other.itemList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.SendAwardAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= itemList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.SendAwardAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      itemList_.WriteTo(output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.SendAwardAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      itemList_.WriteTo(ref output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.SendAwardAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += itemList_.CalculateSize(_repeated_itemList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SendAwardAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.SendAwardAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      itemList_.Add(other.itemList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.SendAwardAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            itemList_.AddEntriesFrom(input, _repeated_itemList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.SendAwardAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            itemList_.AddEntriesFrom(ref input, _repeated_itemList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SendAwardAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 数据为空
        /// </summary>
        [pbr::OriginalName("NoDate")] NoDate = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// MailStateData 邮件状态数据
  /// </summary>
  public sealed partial class MailStateData : pb::IMessage<MailStateData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MailStateData> _parser = new pb::MessageParser<MailStateData>(() => new MailStateData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MailStateData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailStateData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailStateData(MailStateData other) : this() {
      mailId_ = other.mailId_;
      haveRead_ = other.haveRead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailStateData Clone() {
      return new MailStateData(this);
    }

    /// <summary>Field number for the "mailId" field.</summary>
    public const int MailIdFieldNumber = 1;
    private string mailId_ = "";
    /// <summary>
    ///邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MailId {
      get { return mailId_; }
      set {
        mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "haveRead" field.</summary>
    public const int HaveReadFieldNumber = 2;
    private bool haveRead_;
    /// <summary>
    ///邮件读取状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HaveRead {
      get { return haveRead_; }
      set {
        haveRead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MailStateData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MailStateData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailId != other.MailId) return false;
      if (HaveRead != other.HaveRead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MailId.Length != 0) hash ^= MailId.GetHashCode();
      if (HaveRead != false) hash ^= HaveRead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MailId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MailId);
      }
      if (HaveRead != false) {
        output.WriteRawTag(16);
        output.WriteBool(HaveRead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MailId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MailId);
      }
      if (HaveRead != false) {
        output.WriteRawTag(16);
        output.WriteBool(HaveRead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
      }
      if (HaveRead != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MailStateData other) {
      if (other == null) {
        return;
      }
      if (other.MailId.Length != 0) {
        MailId = other.MailId;
      }
      if (other.HaveRead != false) {
        HaveRead = other.HaveRead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MailId = input.ReadString();
            break;
          }
          case 16: {
            HaveRead = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MailId = input.ReadString();
            break;
          }
          case 16: {
            HaveRead = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 返回邮件列表
  /// </summary>
  public sealed partial class GetMailStateListAck : pb::IMessage<GetMailStateListAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMailStateListAck> _parser = new pb::MessageParser<GetMailStateListAck>(() => new GetMailStateListAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetMailStateListAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMailStateListAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMailStateListAck(GetMailStateListAck other) : this() {
      code_ = other.code_;
      mailState_ = other.mailState_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMailStateListAck Clone() {
      return new GetMailStateListAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.GetMailStateListAck.Types.AckCode code_ = global::Server2Client.GetMailStateListAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.GetMailStateListAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "mailState" field.</summary>
    public const int MailStateFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Server2Client.MailStateData> _repeated_mailState_codec
        = pb::FieldCodec.ForMessage(18, global::Server2Client.MailStateData.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.MailStateData> mailState_ = new pbc::RepeatedField<global::Server2Client.MailStateData>();
    /// <summary>
    ///邮件读取状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.MailStateData> MailState {
      get { return mailState_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetMailStateListAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetMailStateListAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!mailState_.Equals(other.mailState_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.GetMailStateListAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= mailState_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.GetMailStateListAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      mailState_.WriteTo(output, _repeated_mailState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.GetMailStateListAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      mailState_.WriteTo(ref output, _repeated_mailState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.GetMailStateListAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += mailState_.CalculateSize(_repeated_mailState_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetMailStateListAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.GetMailStateListAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      mailState_.Add(other.mailState_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.GetMailStateListAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            mailState_.AddEntriesFrom(input, _repeated_mailState_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.GetMailStateListAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            mailState_.AddEntriesFrom(ref input, _repeated_mailState_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetMailStateListAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取活动状态 返回
  /// </summary>
  public sealed partial class LS2C_GetActivityStatusAck : pb::IMessage<LS2C_GetActivityStatusAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetActivityStatusAck> _parser = new pb::MessageParser<LS2C_GetActivityStatusAck>(() => new LS2C_GetActivityStatusAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetActivityStatusAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetActivityStatusAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetActivityStatusAck(LS2C_GetActivityStatusAck other) : this() {
      code_ = other.code_;
      activityStatusInfo_ = other.activityStatusInfo_.Clone();
      gmLevel_ = other.gmLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetActivityStatusAck Clone() {
      return new LS2C_GetActivityStatusAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode code_ = global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "activityStatusInfo" field.</summary>
    public const int ActivityStatusInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Server2Client.ActivityStatusInfo> _repeated_activityStatusInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Server2Client.ActivityStatusInfo.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.ActivityStatusInfo> activityStatusInfo_ = new pbc::RepeatedField<global::Server2Client.ActivityStatusInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.ActivityStatusInfo> ActivityStatusInfo {
      get { return activityStatusInfo_; }
    }

    /// <summary>Field number for the "gmLevel" field.</summary>
    public const int GmLevelFieldNumber = 3;
    private int gmLevel_;
    /// <summary>
    /// 玩家gmLevel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GmLevel {
      get { return gmLevel_; }
      set {
        gmLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetActivityStatusAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetActivityStatusAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!activityStatusInfo_.Equals(other.activityStatusInfo_)) return false;
      if (GmLevel != other.GmLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      hash ^= activityStatusInfo_.GetHashCode();
      if (GmLevel != 0) hash ^= GmLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      activityStatusInfo_.WriteTo(output, _repeated_activityStatusInfo_codec);
      if (GmLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GmLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      activityStatusInfo_.WriteTo(ref output, _repeated_activityStatusInfo_codec);
      if (GmLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GmLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      size += activityStatusInfo_.CalculateSize(_repeated_activityStatusInfo_codec);
      if (GmLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GmLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetActivityStatusAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      activityStatusInfo_.Add(other.activityStatusInfo_);
      if (other.GmLevel != 0) {
        GmLevel = other.GmLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            activityStatusInfo_.AddEntriesFrom(input, _repeated_activityStatusInfo_codec);
            break;
          }
          case 24: {
            GmLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_GetActivityStatusAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            activityStatusInfo_.AddEntriesFrom(ref input, _repeated_activityStatusInfo_codec);
            break;
          }
          case 24: {
            GmLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetActivityStatusAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 服务器对 C2LS_DailyMatch_UseItem 的返回
  /// </summary>
  public sealed partial class LS2C_DailyMatch_UseItem : pb::IMessage<LS2C_DailyMatch_UseItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_DailyMatch_UseItem> _parser = new pb::MessageParser<LS2C_DailyMatch_UseItem>(() => new LS2C_DailyMatch_UseItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_DailyMatch_UseItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_DailyMatch_UseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_DailyMatch_UseItem(LS2C_DailyMatch_UseItem other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_DailyMatch_UseItem Clone() {
      return new LS2C_DailyMatch_UseItem(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode ackCode_ = global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode.Fail;
    /// <summary>
    /// 结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_DailyMatch_UseItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_DailyMatch_UseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_DailyMatch_UseItem other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_DailyMatch_UseItem.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_DailyMatch_UseItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 无效的 token, 需要退出游戏
        /// </summary>
        [pbr::OriginalName("InvalidToken")] InvalidToken = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置玩家自己的 AdCode 返回
  /// </summary>
  public sealed partial class LS2C_SetAdCodeAck : pb::IMessage<LS2C_SetAdCodeAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SetAdCodeAck> _parser = new pb::MessageParser<LS2C_SetAdCodeAck>(() => new LS2C_SetAdCodeAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SetAdCodeAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetAdCodeAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetAdCodeAck(LS2C_SetAdCodeAck other) : this() {
      code_ = other.code_;
      adCode_ = other.adCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetAdCodeAck Clone() {
      return new LS2C_SetAdCodeAck(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode code_ = global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "adCode" field.</summary>
    public const int AdCodeFieldNumber = 2;
    private string adCode_ = "";
    /// <summary>
    /// 返回当前的 adCode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdCode {
      get { return adCode_; }
      set {
        adCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SetAdCodeAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SetAdCodeAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (AdCode != other.AdCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      if (AdCode.Length != 0) hash ^= AdCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (AdCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (AdCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (AdCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SetAdCodeAck other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode.Fail) {
        Code = other.Code;
      }
      if (other.AdCode.Length != 0) {
        AdCode = other.AdCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            AdCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_SetAdCodeAck.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            AdCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SetAdCodeAck message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置玩家的自己的 AdCode 的返回
  /// </summary>
  public sealed partial class LS2C_GetAdCode : pb::IMessage<LS2C_GetAdCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetAdCode> _parser = new pb::MessageParser<LS2C_GetAdCode>(() => new LS2C_GetAdCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetAdCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetAdCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetAdCode(LS2C_GetAdCode other) : this() {
      code_ = other.code_;
      adCode_ = other.adCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetAdCode Clone() {
      return new LS2C_GetAdCode(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetAdCode.Types.AckCode code_ = global::Server2Client.LS2C_GetAdCode.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetAdCode.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "adCode" field.</summary>
    public const int AdCodeFieldNumber = 2;
    private string adCode_ = "";
    /// <summary>
    /// 返回当前的 adCode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdCode {
      get { return adCode_; }
      set {
        adCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetAdCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetAdCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (AdCode != other.AdCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.LS2C_GetAdCode.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      if (AdCode.Length != 0) hash ^= AdCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.LS2C_GetAdCode.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (AdCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.LS2C_GetAdCode.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (AdCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.LS2C_GetAdCode.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (AdCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetAdCode other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.LS2C_GetAdCode.Types.AckCode.Fail) {
        Code = other.Code;
      }
      if (other.AdCode.Length != 0) {
        AdCode = other.AdCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_GetAdCode.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            AdCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_GetAdCode.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            AdCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetAdCode message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 请求玩家基础信息返回
  /// </summary>
  public sealed partial class LS2C_UserBaseInfo_Ack : pb::IMessage<LS2C_UserBaseInfo_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_UserBaseInfo_Ack> _parser = new pb::MessageParser<LS2C_UserBaseInfo_Ack>(() => new LS2C_UserBaseInfo_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_UserBaseInfo_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_UserBaseInfo_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_UserBaseInfo_Ack(LS2C_UserBaseInfo_Ack other) : this() {
      ackCode_ = other.ackCode_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      characterData_ = other.characterData_.Clone();
      functions_ = other.functions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_UserBaseInfo_Ack Clone() {
      return new LS2C_UserBaseInfo_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "userInfo" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Protocol.UserInfo userInfo_;
    /// <summary>
    /// 用户信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "characterData" field.</summary>
    public const int CharacterDataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protocol.CharacterData> _repeated_characterData_codec
        = pb::FieldCodec.ForMessage(26, global::Protocol.CharacterData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.CharacterData> characterData_ = new pbc::RepeatedField<global::Protocol.CharacterData>();
    /// <summary>
    /// 角色信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.CharacterData> CharacterData {
      get { return characterData_; }
    }

    /// <summary>Field number for the "functions" field.</summary>
    public const int FunctionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Protocol.EFunctionType> _repeated_functions_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Protocol.EFunctionType) x);
    private readonly pbc::RepeatedField<global::Protocol.EFunctionType> functions_ = new pbc::RepeatedField<global::Protocol.EFunctionType>();
    /// <summary>
    /// 开启的功能列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.EFunctionType> Functions {
      get { return functions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_UserBaseInfo_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_UserBaseInfo_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if(!characterData_.Equals(other.characterData_)) return false;
      if(!functions_.Equals(other.functions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      hash ^= characterData_.GetHashCode();
      hash ^= functions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      characterData_.WriteTo(output, _repeated_characterData_codec);
      functions_.WriteTo(output, _repeated_functions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      characterData_.WriteTo(ref output, _repeated_characterData_codec);
      functions_.WriteTo(ref output, _repeated_functions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      size += characterData_.CalculateSize(_repeated_characterData_codec);
      size += functions_.CalculateSize(_repeated_functions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_UserBaseInfo_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Protocol.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      characterData_.Add(other.characterData_);
      functions_.Add(other.functions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Protocol.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            characterData_.AddEntriesFrom(input, _repeated_characterData_codec);
            break;
          }
          case 34:
          case 32: {
            functions_.AddEntriesFrom(input, _repeated_functions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_UserBaseInfo_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Protocol.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            characterData_.AddEntriesFrom(ref input, _repeated_characterData_codec);
            break;
          }
          case 34:
          case 32: {
            functions_.AddEntriesFrom(ref input, _repeated_functions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_UserBaseInfo_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  public sealed partial class ModeItemSharedCount : pb::IMessage<ModeItemSharedCount>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModeItemSharedCount> _parser = new pb::MessageParser<ModeItemSharedCount>(() => new ModeItemSharedCount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ModeItemSharedCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModeItemSharedCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModeItemSharedCount(ModeItemSharedCount other) : this() {
      itemType_ = other.itemType_;
      leftShareCounts_ = other.leftShareCounts_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModeItemSharedCount Clone() {
      return new ModeItemSharedCount(this);
    }

    /// <summary>Field number for the "itemType" field.</summary>
    public const int ItemTypeFieldNumber = 1;
    private global::Protocol.ECrushModeItemType itemType_ = global::Protocol.ECrushModeItemType.Invalid;
    /// <summary>
    /// 道具类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.ECrushModeItemType ItemType {
      get { return itemType_; }
      set {
        itemType_ = value;
      }
    }

    /// <summary>Field number for the "leftShareCounts" field.</summary>
    public const int LeftShareCountsFieldNumber = 2;
    private int leftShareCounts_;
    /// <summary>
    /// 剩余分享次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftShareCounts {
      get { return leftShareCounts_; }
      set {
        leftShareCounts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ModeItemSharedCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ModeItemSharedCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemType != other.ItemType) return false;
      if (LeftShareCounts != other.LeftShareCounts) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemType != global::Protocol.ECrushModeItemType.Invalid) hash ^= ItemType.GetHashCode();
      if (LeftShareCounts != 0) hash ^= LeftShareCounts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemType != global::Protocol.ECrushModeItemType.Invalid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemType);
      }
      if (LeftShareCounts != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftShareCounts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemType != global::Protocol.ECrushModeItemType.Invalid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemType);
      }
      if (LeftShareCounts != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftShareCounts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ItemType != global::Protocol.ECrushModeItemType.Invalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemType);
      }
      if (LeftShareCounts != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftShareCounts);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ModeItemSharedCount other) {
      if (other == null) {
        return;
      }
      if (other.ItemType != global::Protocol.ECrushModeItemType.Invalid) {
        ItemType = other.ItemType;
      }
      if (other.LeftShareCounts != 0) {
        LeftShareCounts = other.LeftShareCounts;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemType = (global::Protocol.ECrushModeItemType) input.ReadEnum();
            break;
          }
          case 16: {
            LeftShareCounts = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemType = (global::Protocol.ECrushModeItemType) input.ReadEnum();
            break;
          }
          case 16: {
            LeftShareCounts = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 请求开局小游戏
  /// </summary>
  public sealed partial class LS2C_Start_Game_Ack : pb::IMessage<LS2C_Start_Game_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_Start_Game_Ack> _parser = new pb::MessageParser<LS2C_Start_Game_Ack>(() => new LS2C_Start_Game_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_Start_Game_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_Start_Game_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_Start_Game_Ack(LS2C_Start_Game_Ack other) : this() {
      ackCode_ = other.ackCode_;
      gameToken_ = other.gameToken_;
      itemSharedInfo_ = other.itemSharedInfo_.Clone();
      dailyChallengeCount_ = other.dailyChallengeCount_;
      matchSeed_ = other.matchSeed_;
      stageMd5_ = other.stageMd5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_Start_Game_Ack Clone() {
      return new LS2C_Start_Game_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "gameToken" field.</summary>
    public const int GameTokenFieldNumber = 2;
    private string gameToken_ = "";
    /// <summary>
    /// 开局比赛token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameToken {
      get { return gameToken_; }
      set {
        gameToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "itemSharedInfo" field.</summary>
    public const int ItemSharedInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Server2Client.ModeItemSharedCount> _repeated_itemSharedInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Server2Client.ModeItemSharedCount.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.ModeItemSharedCount> itemSharedInfo_ = new pbc::RepeatedField<global::Server2Client.ModeItemSharedCount>();
    /// <summary>
    /// 剩余分享次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.ModeItemSharedCount> ItemSharedInfo {
      get { return itemSharedInfo_; }
    }

    /// <summary>Field number for the "dailyChallengeCount" field.</summary>
    public const int DailyChallengeCountFieldNumber = 4;
    private int dailyChallengeCount_;
    /// <summary>
    /// 本人每日挑战次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DailyChallengeCount {
      get { return dailyChallengeCount_; }
      set {
        dailyChallengeCount_ = value;
      }
    }

    /// <summary>Field number for the "matchSeed" field.</summary>
    public const int MatchSeedFieldNumber = 5;
    private int matchSeed_;
    /// <summary>
    /// 当前关卡的种子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MatchSeed {
      get { return matchSeed_; }
      set {
        matchSeed_ = value;
      }
    }

    /// <summary>Field number for the "stageMd5" field.</summary>
    public const int StageMd5FieldNumber = 6;
    private string stageMd5_ = "";
    /// <summary>
    /// 关卡的 md5（这里是最准确的md5，UserBaseInfo中的md5信息为了前端预加载）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StageMd5 {
      get { return stageMd5_; }
      set {
        stageMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_Start_Game_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_Start_Game_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (GameToken != other.GameToken) return false;
      if(!itemSharedInfo_.Equals(other.itemSharedInfo_)) return false;
      if (DailyChallengeCount != other.DailyChallengeCount) return false;
      if (MatchSeed != other.MatchSeed) return false;
      if (StageMd5 != other.StageMd5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (GameToken.Length != 0) hash ^= GameToken.GetHashCode();
      hash ^= itemSharedInfo_.GetHashCode();
      if (DailyChallengeCount != 0) hash ^= DailyChallengeCount.GetHashCode();
      if (MatchSeed != 0) hash ^= MatchSeed.GetHashCode();
      if (StageMd5.Length != 0) hash ^= StageMd5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (GameToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameToken);
      }
      itemSharedInfo_.WriteTo(output, _repeated_itemSharedInfo_codec);
      if (DailyChallengeCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DailyChallengeCount);
      }
      if (MatchSeed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MatchSeed);
      }
      if (StageMd5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StageMd5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (GameToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameToken);
      }
      itemSharedInfo_.WriteTo(ref output, _repeated_itemSharedInfo_codec);
      if (DailyChallengeCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DailyChallengeCount);
      }
      if (MatchSeed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MatchSeed);
      }
      if (StageMd5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StageMd5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (GameToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameToken);
      }
      size += itemSharedInfo_.CalculateSize(_repeated_itemSharedInfo_codec);
      if (DailyChallengeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyChallengeCount);
      }
      if (MatchSeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchSeed);
      }
      if (StageMd5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StageMd5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_Start_Game_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.GameToken.Length != 0) {
        GameToken = other.GameToken;
      }
      itemSharedInfo_.Add(other.itemSharedInfo_);
      if (other.DailyChallengeCount != 0) {
        DailyChallengeCount = other.DailyChallengeCount;
      }
      if (other.MatchSeed != 0) {
        MatchSeed = other.MatchSeed;
      }
      if (other.StageMd5.Length != 0) {
        StageMd5 = other.StageMd5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            GameToken = input.ReadString();
            break;
          }
          case 26: {
            itemSharedInfo_.AddEntriesFrom(input, _repeated_itemSharedInfo_codec);
            break;
          }
          case 32: {
            DailyChallengeCount = input.ReadInt32();
            break;
          }
          case 40: {
            MatchSeed = input.ReadInt32();
            break;
          }
          case 50: {
            StageMd5 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_Start_Game_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            GameToken = input.ReadString();
            break;
          }
          case 26: {
            itemSharedInfo_.AddEntriesFrom(ref input, _repeated_itemSharedInfo_codec);
            break;
          }
          case 32: {
            DailyChallengeCount = input.ReadInt32();
            break;
          }
          case 40: {
            MatchSeed = input.ReadInt32();
            break;
          }
          case 50: {
            StageMd5 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_Start_Game_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 缺少星球币
        /// </summary>
        [pbr::OriginalName("LessCoin")] LessCoin = 2,
        /// <summary>
        /// 玩法未开启
        /// </summary>
        [pbr::OriginalName("GameTypeNotOpen")] GameTypeNotOpen = 3,
        /// <summary>
        /// 维护中
        /// </summary>
        [pbr::OriginalName("Updating")] Updating = 4,
        /// <summary>
        /// 需要结算
        /// </summary>
        [pbr::OriginalName("NeedSettle")] NeedSettle = 5,
        /// <summary>
        /// 等待结算
        /// </summary>
        [pbr::OriginalName("WaitSettle")] WaitSettle = 6,
        /// <summary>
        /// 无效的关卡
        /// </summary>
        [pbr::OriginalName("InvalidStage")] InvalidStage = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// 告诉服务器游戏结束 请求结算
  /// </summary>
  public sealed partial class LS2C_End_Game_Ack : pb::IMessage<LS2C_End_Game_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_End_Game_Ack> _parser = new pb::MessageParser<LS2C_End_Game_Ack>(() => new LS2C_End_Game_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_End_Game_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_End_Game_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_End_Game_Ack(LS2C_End_Game_Ack other) : this() {
      ackCode_ = other.ackCode_;
      dailyPassedCount_ = other.dailyPassedCount_;
      totalPassedCount_ = other.totalPassedCount_;
      dailyChallengeCount_ = other.dailyChallengeCount_;
      stageData_ = other.stageData_.Clone();
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_End_Game_Ack Clone() {
      return new LS2C_End_Game_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_End_Game_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_End_Game_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_End_Game_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "dailyPassedCount" field.</summary>
    public const int DailyPassedCountFieldNumber = 2;
    private int dailyPassedCount_;
    /// <summary>
    /// 本人当日通关次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DailyPassedCount {
      get { return dailyPassedCount_; }
      set {
        dailyPassedCount_ = value;
      }
    }

    /// <summary>Field number for the "totalPassedCount" field.</summary>
    public const int TotalPassedCountFieldNumber = 3;
    private int totalPassedCount_;
    /// <summary>
    /// 本人总游戏次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPassedCount {
      get { return totalPassedCount_; }
      set {
        totalPassedCount_ = value;
      }
    }

    /// <summary>Field number for the "dailyChallengeCount" field.</summary>
    public const int DailyChallengeCountFieldNumber = 4;
    private int dailyChallengeCount_;
    /// <summary>
    /// 本人每日挑战次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DailyChallengeCount {
      get { return dailyChallengeCount_; }
      set {
        dailyChallengeCount_ = value;
      }
    }

    /// <summary>Field number for the "stageData" field.</summary>
    public const int StageDataFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Protocol.StageData> _repeated_stageData_codec
        = pb::FieldCodec.ForMessage(42, global::Protocol.StageData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.StageData> stageData_ = new pbc::RepeatedField<global::Protocol.StageData>();
    /// <summary>
    /// 当前关卡数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.StageData> StageData {
      get { return stageData_; }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_rewards_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> rewards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 奖励物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_End_Game_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_End_Game_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (DailyPassedCount != other.DailyPassedCount) return false;
      if (TotalPassedCount != other.TotalPassedCount) return false;
      if (DailyChallengeCount != other.DailyChallengeCount) return false;
      if(!stageData_.Equals(other.stageData_)) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_End_Game_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (DailyPassedCount != 0) hash ^= DailyPassedCount.GetHashCode();
      if (TotalPassedCount != 0) hash ^= TotalPassedCount.GetHashCode();
      if (DailyChallengeCount != 0) hash ^= DailyChallengeCount.GetHashCode();
      hash ^= stageData_.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_End_Game_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (DailyPassedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DailyPassedCount);
      }
      if (TotalPassedCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalPassedCount);
      }
      if (DailyChallengeCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DailyChallengeCount);
      }
      stageData_.WriteTo(output, _repeated_stageData_codec);
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_End_Game_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (DailyPassedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DailyPassedCount);
      }
      if (TotalPassedCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalPassedCount);
      }
      if (DailyChallengeCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DailyChallengeCount);
      }
      stageData_.WriteTo(ref output, _repeated_stageData_codec);
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_End_Game_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (DailyPassedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyPassedCount);
      }
      if (TotalPassedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPassedCount);
      }
      if (DailyChallengeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyChallengeCount);
      }
      size += stageData_.CalculateSize(_repeated_stageData_codec);
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_End_Game_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_End_Game_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.DailyPassedCount != 0) {
        DailyPassedCount = other.DailyPassedCount;
      }
      if (other.TotalPassedCount != 0) {
        TotalPassedCount = other.TotalPassedCount;
      }
      if (other.DailyChallengeCount != 0) {
        DailyChallengeCount = other.DailyChallengeCount;
      }
      stageData_.Add(other.stageData_);
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_End_Game_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            DailyPassedCount = input.ReadInt32();
            break;
          }
          case 24: {
            TotalPassedCount = input.ReadInt32();
            break;
          }
          case 32: {
            DailyChallengeCount = input.ReadInt32();
            break;
          }
          case 42: {
            stageData_.AddEntriesFrom(input, _repeated_stageData_codec);
            break;
          }
          case 50:
          case 48: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_End_Game_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            DailyPassedCount = input.ReadInt32();
            break;
          }
          case 24: {
            TotalPassedCount = input.ReadInt32();
            break;
          }
          case 32: {
            DailyChallengeCount = input.ReadInt32();
            break;
          }
          case 42: {
            stageData_.AddEntriesFrom(ref input, _repeated_stageData_codec);
            break;
          }
          case 50:
          case 48: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_End_Game_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 无效的 token, 需要重新拉取关卡信息
        /// </summary>
        [pbr::OriginalName("InvalidToken")] InvalidToken = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置玩家引导状态 返回
  /// </summary>
  public sealed partial class LS2C_SetGuide_Ack : pb::IMessage<LS2C_SetGuide_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SetGuide_Ack> _parser = new pb::MessageParser<LS2C_SetGuide_Ack>(() => new LS2C_SetGuide_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SetGuide_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetGuide_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetGuide_Ack(LS2C_SetGuide_Ack other) : this() {
      ackCode_ = other.ackCode_;
      currGuide_ = other.currGuide_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetGuide_Ack Clone() {
      return new LS2C_SetGuide_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "currGuide" field.</summary>
    public const int CurrGuideFieldNumber = 2;
    private int currGuide_;
    /// <summary>
    /// 当前引导枚举 常量表中的cfg.EGuideType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrGuide {
      get { return currGuide_; }
      set {
        currGuide_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SetGuide_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SetGuide_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (CurrGuide != other.CurrGuide) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (CurrGuide != 0) hash ^= CurrGuide.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (CurrGuide != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrGuide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (CurrGuide != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrGuide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (CurrGuide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrGuide);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SetGuide_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.CurrGuide != 0) {
        CurrGuide = other.CurrGuide;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            CurrGuide = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetGuide_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            CurrGuide = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SetGuide_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 分享 返回
  /// </summary>
  public sealed partial class LS2C_Share_Ack : pb::IMessage<LS2C_Share_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_Share_Ack> _parser = new pb::MessageParser<LS2C_Share_Ack>(() => new LS2C_Share_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_Share_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_Share_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_Share_Ack(LS2C_Share_Ack other) : this() {
      ackCode_ = other.ackCode_;
      itemSharedInfo_ = other.itemSharedInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_Share_Ack Clone() {
      return new LS2C_Share_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_Share_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_Share_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_Share_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "itemSharedInfo" field.</summary>
    public const int ItemSharedInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Server2Client.ModeItemSharedCount> _repeated_itemSharedInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Server2Client.ModeItemSharedCount.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.ModeItemSharedCount> itemSharedInfo_ = new pbc::RepeatedField<global::Server2Client.ModeItemSharedCount>();
    /// <summary>
    /// 剩余分享次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.ModeItemSharedCount> ItemSharedInfo {
      get { return itemSharedInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_Share_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_Share_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if(!itemSharedInfo_.Equals(other.itemSharedInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_Share_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      hash ^= itemSharedInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_Share_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      itemSharedInfo_.WriteTo(output, _repeated_itemSharedInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_Share_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      itemSharedInfo_.WriteTo(ref output, _repeated_itemSharedInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_Share_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      size += itemSharedInfo_.CalculateSize(_repeated_itemSharedInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_Share_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_Share_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      itemSharedInfo_.Add(other.itemSharedInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_Share_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            itemSharedInfo_.AddEntriesFrom(input, _repeated_itemSharedInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_Share_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            itemSharedInfo_.AddEntriesFrom(ref input, _repeated_itemSharedInfo_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_Share_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 无效的 token, 可能是昨天的
        /// </summary>
        [pbr::OriginalName("InvalidToken")] InvalidToken = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置通过引导关卡 返回
  /// </summary>
  public sealed partial class LS2C_SetGuideFinish_Ack : pb::IMessage<LS2C_SetGuideFinish_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SetGuideFinish_Ack> _parser = new pb::MessageParser<LS2C_SetGuideFinish_Ack>(() => new LS2C_SetGuideFinish_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SetGuideFinish_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetGuideFinish_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetGuideFinish_Ack(LS2C_SetGuideFinish_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetGuideFinish_Ack Clone() {
      return new LS2C_SetGuideFinish_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SetGuideFinish_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SetGuideFinish_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SetGuideFinish_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetGuideFinish_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SetGuideFinish_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置通过新人关卡 返回
  /// </summary>
  public sealed partial class LS2C_SetNewbieFinish_Ack : pb::IMessage<LS2C_SetNewbieFinish_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SetNewbieFinish_Ack> _parser = new pb::MessageParser<LS2C_SetNewbieFinish_Ack>(() => new LS2C_SetNewbieFinish_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SetNewbieFinish_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetNewbieFinish_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetNewbieFinish_Ack(LS2C_SetNewbieFinish_Ack other) : this() {
      ackCode_ = other.ackCode_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetNewbieFinish_Ack Clone() {
      return new LS2C_SetNewbieFinish_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_rewards_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> rewards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 奖励物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SetNewbieFinish_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SetNewbieFinish_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SetNewbieFinish_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetNewbieFinish_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SetNewbieFinish_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 开始新人关卡 返回
  /// </summary>
  public sealed partial class LS2C_StartNewbie_Ack : pb::IMessage<LS2C_StartNewbie_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_StartNewbie_Ack> _parser = new pb::MessageParser<LS2C_StartNewbie_Ack>(() => new LS2C_StartNewbie_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_StartNewbie_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_StartNewbie_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_StartNewbie_Ack(LS2C_StartNewbie_Ack other) : this() {
      ackCode_ = other.ackCode_;
      itemSharedInfo_ = other.itemSharedInfo_.Clone();
      matchSeed_ = other.matchSeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_StartNewbie_Ack Clone() {
      return new LS2C_StartNewbie_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "itemSharedInfo" field.</summary>
    public const int ItemSharedInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Server2Client.ModeItemSharedCount> _repeated_itemSharedInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Server2Client.ModeItemSharedCount.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.ModeItemSharedCount> itemSharedInfo_ = new pbc::RepeatedField<global::Server2Client.ModeItemSharedCount>();
    /// <summary>
    /// 剩余分享次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.ModeItemSharedCount> ItemSharedInfo {
      get { return itemSharedInfo_; }
    }

    /// <summary>Field number for the "matchSeed" field.</summary>
    public const int MatchSeedFieldNumber = 3;
    private int matchSeed_;
    /// <summary>
    /// 当前关卡的种子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MatchSeed {
      get { return matchSeed_; }
      set {
        matchSeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_StartNewbie_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_StartNewbie_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if(!itemSharedInfo_.Equals(other.itemSharedInfo_)) return false;
      if (MatchSeed != other.MatchSeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      hash ^= itemSharedInfo_.GetHashCode();
      if (MatchSeed != 0) hash ^= MatchSeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      itemSharedInfo_.WriteTo(output, _repeated_itemSharedInfo_codec);
      if (MatchSeed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MatchSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      itemSharedInfo_.WriteTo(ref output, _repeated_itemSharedInfo_codec);
      if (MatchSeed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MatchSeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      size += itemSharedInfo_.CalculateSize(_repeated_itemSharedInfo_codec);
      if (MatchSeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchSeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_StartNewbie_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      itemSharedInfo_.Add(other.itemSharedInfo_);
      if (other.MatchSeed != 0) {
        MatchSeed = other.MatchSeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            itemSharedInfo_.AddEntriesFrom(input, _repeated_itemSharedInfo_codec);
            break;
          }
          case 24: {
            MatchSeed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_StartNewbie_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            itemSharedInfo_.AddEntriesFrom(ref input, _repeated_itemSharedInfo_codec);
            break;
          }
          case 24: {
            MatchSeed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_StartNewbie_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置是否授权 返回
  /// </summary>
  public sealed partial class LS2C_SetAuthorize_Ack : pb::IMessage<LS2C_SetAuthorize_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SetAuthorize_Ack> _parser = new pb::MessageParser<LS2C_SetAuthorize_Ack>(() => new LS2C_SetAuthorize_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SetAuthorize_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetAuthorize_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetAuthorize_Ack(LS2C_SetAuthorize_Ack other) : this() {
      ackCode_ = other.ackCode_;
      isAuthorized_ = other.isAuthorized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetAuthorize_Ack Clone() {
      return new LS2C_SetAuthorize_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "isAuthorized" field.</summary>
    public const int IsAuthorizedFieldNumber = 2;
    private bool isAuthorized_;
    /// <summary>
    /// 是否授权
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAuthorized {
      get { return isAuthorized_; }
      set {
        isAuthorized_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SetAuthorize_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SetAuthorize_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (IsAuthorized != other.IsAuthorized) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (IsAuthorized != false) hash ^= IsAuthorized.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (IsAuthorized != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAuthorized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (IsAuthorized != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAuthorized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (IsAuthorized != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SetAuthorize_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.IsAuthorized != false) {
        IsAuthorized = other.IsAuthorized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            IsAuthorized = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SetAuthorize_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            IsAuthorized = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SetAuthorize_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 皮肤信息
  /// </summary>
  public sealed partial class SkinInfo : pb::IMessage<SkinInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkinInfo> _parser = new pb::MessageParser<SkinInfo>(() => new SkinInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkinInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinInfo(SkinInfo other) : this() {
      skinId_ = other.skinId_;
      createTime_ = other.createTime_;
      isNew_ = other.isNew_;
      reason_ = other.reason_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinInfo Clone() {
      return new SkinInfo(this);
    }

    /// <summary>Field number for the "skinId" field.</summary>
    public const int SkinIdFieldNumber = 1;
    private int skinId_;
    /// <summary>
    /// 皮肤ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkinId {
      get { return skinId_; }
      set {
        skinId_ = value;
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private long createTime_;
    /// <summary>
    /// 获得时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "isNew" field.</summary>
    public const int IsNewFieldNumber = 3;
    private bool isNew_;
    /// <summary>
    /// 是否新获得皮肤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNew {
      get { return isNew_; }
      set {
        isNew_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private string reason_ = "";
    /// <summary>
    /// 获得原因
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 5;
    private string uid_ = "";
    /// <summary>
    /// 唯一 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkinInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkinInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SkinId != other.SkinId) return false;
      if (CreateTime != other.CreateTime) return false;
      if (IsNew != other.IsNew) return false;
      if (Reason != other.Reason) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SkinId != 0) hash ^= SkinId.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (IsNew != false) hash ^= IsNew.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SkinId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkinId);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CreateTime);
      }
      if (IsNew != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsNew);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SkinId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SkinId);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CreateTime);
      }
      if (IsNew != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsNew);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SkinId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkinId);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (IsNew != false) {
        size += 1 + 1;
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkinInfo other) {
      if (other == null) {
        return;
      }
      if (other.SkinId != 0) {
        SkinId = other.SkinId;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.IsNew != false) {
        IsNew = other.IsNew;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SkinId = input.ReadInt32();
            break;
          }
          case 16: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 24: {
            IsNew = input.ReadBool();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SkinId = input.ReadInt32();
            break;
          }
          case 16: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 24: {
            IsNew = input.ReadBool();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SkinCollection : pb::IMessage<SkinCollection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkinCollection> _parser = new pb::MessageParser<SkinCollection>(() => new SkinCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkinCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinCollection(SkinCollection other) : this() {
      skins_ = other.skins_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinCollection Clone() {
      return new SkinCollection(this);
    }

    /// <summary>Field number for the "skins" field.</summary>
    public const int SkinsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Server2Client.SkinInfo> _repeated_skins_codec
        = pb::FieldCodec.ForMessage(10, global::Server2Client.SkinInfo.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.SkinInfo> skins_ = new pbc::RepeatedField<global::Server2Client.SkinInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.SkinInfo> Skins {
      get { return skins_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkinCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkinCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!skins_.Equals(other.skins_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= skins_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      skins_.WriteTo(output, _repeated_skins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      skins_.WriteTo(ref output, _repeated_skins_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += skins_.CalculateSize(_repeated_skins_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkinCollection other) {
      if (other == null) {
        return;
      }
      skins_.Add(other.skins_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            skins_.AddEntriesFrom(input, _repeated_skins_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            skins_.AddEntriesFrom(ref input, _repeated_skins_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 获取装扮收藏信息 返回
  /// </summary>
  public sealed partial class LS2C_GetDressUpInfo_Ack : pb::IMessage<LS2C_GetDressUpInfo_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetDressUpInfo_Ack> _parser = new pb::MessageParser<LS2C_GetDressUpInfo_Ack>(() => new LS2C_GetDressUpInfo_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetDressUpInfo_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetDressUpInfo_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetDressUpInfo_Ack(LS2C_GetDressUpInfo_Ack other) : this() {
      ackCode_ = other.ackCode_;
      usingSkin_ = other.usingSkin_.Clone();
      skinCollection_ = other.skinCollection_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetDressUpInfo_Ack Clone() {
      return new LS2C_GetDressUpInfo_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "usingSkin" field.</summary>
    public const int UsingSkinFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_usingSkin_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 18);
    private readonly pbc::MapField<int, int> usingSkin_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 当前使用的皮肤ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, int> UsingSkin {
      get { return usingSkin_; }
    }

    /// <summary>Field number for the "skinCollection" field.</summary>
    public const int SkinCollectionFieldNumber = 3;
    private static readonly pbc::MapField<int, global::Server2Client.SkinCollection>.Codec _map_skinCollection_codec
        = new pbc::MapField<int, global::Server2Client.SkinCollection>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Server2Client.SkinCollection.Parser), 26);
    private readonly pbc::MapField<int, global::Server2Client.SkinCollection> skinCollection_ = new pbc::MapField<int, global::Server2Client.SkinCollection>();
    /// <summary>
    /// (1:xxx 2:xxx )收藏的皮肤列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::Server2Client.SkinCollection> SkinCollection {
      get { return skinCollection_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetDressUpInfo_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetDressUpInfo_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (!UsingSkin.Equals(other.UsingSkin)) return false;
      if (!SkinCollection.Equals(other.SkinCollection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      hash ^= UsingSkin.GetHashCode();
      hash ^= SkinCollection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      usingSkin_.WriteTo(output, _map_usingSkin_codec);
      skinCollection_.WriteTo(output, _map_skinCollection_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      usingSkin_.WriteTo(ref output, _map_usingSkin_codec);
      skinCollection_.WriteTo(ref output, _map_skinCollection_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      size += usingSkin_.CalculateSize(_map_usingSkin_codec);
      size += skinCollection_.CalculateSize(_map_skinCollection_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetDressUpInfo_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      usingSkin_.Add(other.usingSkin_);
      skinCollection_.Add(other.skinCollection_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            usingSkin_.AddEntriesFrom(input, _map_usingSkin_codec);
            break;
          }
          case 26: {
            skinCollection_.AddEntriesFrom(input, _map_skinCollection_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetDressUpInfo_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            usingSkin_.AddEntriesFrom(ref input, _map_usingSkin_codec);
            break;
          }
          case 26: {
            skinCollection_.AddEntriesFrom(ref input, _map_skinCollection_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetDressUpInfo_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 查看皮肤 返回
  /// </summary>
  public sealed partial class LS2C_ViewSkins_Ack : pb::IMessage<LS2C_ViewSkins_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_ViewSkins_Ack> _parser = new pb::MessageParser<LS2C_ViewSkins_Ack>(() => new LS2C_ViewSkins_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_ViewSkins_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ViewSkins_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ViewSkins_Ack(LS2C_ViewSkins_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ViewSkins_Ack Clone() {
      return new LS2C_ViewSkins_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_ViewSkins_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_ViewSkins_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_ViewSkins_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ViewSkins_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_ViewSkins_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 使用皮肤 返回
  /// </summary>
  public sealed partial class LS2C_SkinDressUp_Ack : pb::IMessage<LS2C_SkinDressUp_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SkinDressUp_Ack> _parser = new pb::MessageParser<LS2C_SkinDressUp_Ack>(() => new LS2C_SkinDressUp_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SkinDressUp_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SkinDressUp_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SkinDressUp_Ack(LS2C_SkinDressUp_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SkinDressUp_Ack Clone() {
      return new LS2C_SkinDressUp_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SkinDressUp_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SkinDressUp_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SkinDressUp_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SkinDressUp_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SkinDressUp_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 位置错误
        /// </summary>
        [pbr::OriginalName("WrongPos")] WrongPos = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 上传同步玩家账号信息
  /// </summary>
  public sealed partial class LS2C_SyncAccountInfo_Ack : pb::IMessage<LS2C_SyncAccountInfo_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SyncAccountInfo_Ack> _parser = new pb::MessageParser<LS2C_SyncAccountInfo_Ack>(() => new LS2C_SyncAccountInfo_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SyncAccountInfo_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SyncAccountInfo_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SyncAccountInfo_Ack(LS2C_SyncAccountInfo_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SyncAccountInfo_Ack Clone() {
      return new LS2C_SyncAccountInfo_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SyncAccountInfo_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SyncAccountInfo_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SyncAccountInfo_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SyncAccountInfo_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SyncAccountInfo_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取玩家名片
  /// </summary>
  public sealed partial class PlayerCard : pb::IMessage<PlayerCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerCard> _parser = new pb::MessageParser<PlayerCard>(() => new PlayerCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCard(PlayerCard other) : this() {
      userBaseInfo_ = other.userBaseInfo_ != null ? other.userBaseInfo_.Clone() : null;
      dailyPassedCount_ = other.dailyPassedCount_;
      usingSkin_ = other.usingSkin_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCard Clone() {
      return new PlayerCard(this);
    }

    /// <summary>Field number for the "userBaseInfo" field.</summary>
    public const int UserBaseInfoFieldNumber = 1;
    private global::Protocol.UserBaseInfo userBaseInfo_;
    /// <summary>
    /// 玩家基本信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.UserBaseInfo UserBaseInfo {
      get { return userBaseInfo_; }
      set {
        userBaseInfo_ = value;
      }
    }

    /// <summary>Field number for the "dailyPassedCount" field.</summary>
    public const int DailyPassedCountFieldNumber = 2;
    private int dailyPassedCount_;
    /// <summary>
    /// 本人当日通关次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DailyPassedCount {
      get { return dailyPassedCount_; }
      set {
        dailyPassedCount_ = value;
      }
    }

    /// <summary>Field number for the "usingSkin" field.</summary>
    public const int UsingSkinFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_usingSkin_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 26);
    private readonly pbc::MapField<int, int> usingSkin_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 当前使用的皮肤ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, int> UsingSkin {
      get { return usingSkin_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserBaseInfo, other.UserBaseInfo)) return false;
      if (DailyPassedCount != other.DailyPassedCount) return false;
      if (!UsingSkin.Equals(other.UsingSkin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (userBaseInfo_ != null) hash ^= UserBaseInfo.GetHashCode();
      if (DailyPassedCount != 0) hash ^= DailyPassedCount.GetHashCode();
      hash ^= UsingSkin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (userBaseInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserBaseInfo);
      }
      if (DailyPassedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DailyPassedCount);
      }
      usingSkin_.WriteTo(output, _map_usingSkin_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (userBaseInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserBaseInfo);
      }
      if (DailyPassedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DailyPassedCount);
      }
      usingSkin_.WriteTo(ref output, _map_usingSkin_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (userBaseInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserBaseInfo);
      }
      if (DailyPassedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyPassedCount);
      }
      size += usingSkin_.CalculateSize(_map_usingSkin_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerCard other) {
      if (other == null) {
        return;
      }
      if (other.userBaseInfo_ != null) {
        if (userBaseInfo_ == null) {
          UserBaseInfo = new global::Protocol.UserBaseInfo();
        }
        UserBaseInfo.MergeFrom(other.UserBaseInfo);
      }
      if (other.DailyPassedCount != 0) {
        DailyPassedCount = other.DailyPassedCount;
      }
      usingSkin_.Add(other.usingSkin_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userBaseInfo_ == null) {
              UserBaseInfo = new global::Protocol.UserBaseInfo();
            }
            input.ReadMessage(UserBaseInfo);
            break;
          }
          case 16: {
            DailyPassedCount = input.ReadInt32();
            break;
          }
          case 26: {
            usingSkin_.AddEntriesFrom(input, _map_usingSkin_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (userBaseInfo_ == null) {
              UserBaseInfo = new global::Protocol.UserBaseInfo();
            }
            input.ReadMessage(UserBaseInfo);
            break;
          }
          case 16: {
            DailyPassedCount = input.ReadInt32();
            break;
          }
          case 26: {
            usingSkin_.AddEntriesFrom(ref input, _map_usingSkin_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 阵营信息
  /// </summary>
  public sealed partial class CampInfo : pb::IMessage<CampInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CampInfo> _parser = new pb::MessageParser<CampInfo>(() => new CampInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CampInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CampInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CampInfo(CampInfo other) : this() {
      camp_ = other.camp_;
      score_ = other.score_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CampInfo Clone() {
      return new CampInfo(this);
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 1;
    private global::Protocol.ECamp camp_ = global::Protocol.ECamp.NoneCamp;
    /// <summary>
    /// 阵营
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.ECamp Camp {
      get { return camp_; }
      set {
        camp_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private int score_;
    /// <summary>
    /// 当前分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Server2Client.PlayerCard> _repeated_players_codec
        = pb::FieldCodec.ForMessage(26, global::Server2Client.PlayerCard.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.PlayerCard> players_ = new pbc::RepeatedField<global::Server2Client.PlayerCard>();
    /// <summary>
    /// 阵营玩家信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.PlayerCard> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CampInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CampInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Camp != other.Camp) return false;
      if (Score != other.Score) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Camp != global::Protocol.ECamp.NoneCamp) hash ^= Camp.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Camp != global::Protocol.ECamp.NoneCamp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Camp);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Camp != global::Protocol.ECamp.NoneCamp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Camp);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Camp != global::Protocol.ECamp.NoneCamp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Camp);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CampInfo other) {
      if (other == null) {
        return;
      }
      if (other.Camp != global::Protocol.ECamp.NoneCamp) {
        Camp = other.Camp;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Camp = (global::Protocol.ECamp) input.ReadEnum();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Camp = (global::Protocol.ECamp) input.ReadEnum();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 话题 pk 活动奖励信息
  /// </summary>
  public sealed partial class TopicBattlePath : pb::IMessage<TopicBattlePath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopicBattlePath> _parser = new pb::MessageParser<TopicBattlePath>(() => new TopicBattlePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TopicBattlePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicBattlePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicBattlePath(TopicBattlePath other) : this() {
      id_ = other.id_;
      passedCount_ = other.passedCount_;
      rewardId_ = other.rewardId_;
      isClaimed_ = other.isClaimed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicBattlePath Clone() {
      return new TopicBattlePath(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 奖励ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "passedCount" field.</summary>
    public const int PassedCountFieldNumber = 2;
    private int passedCount_;
    /// <summary>
    /// 通关次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PassedCount {
      get { return passedCount_; }
      set {
        passedCount_ = value;
      }
    }

    /// <summary>Field number for the "rewardId" field.</summary>
    public const int RewardIdFieldNumber = 3;
    private int rewardId_;
    /// <summary>
    /// 奖励的道具ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "isClaimed" field.</summary>
    public const int IsClaimedFieldNumber = 4;
    private bool isClaimed_;
    /// <summary>
    /// 是否已领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsClaimed {
      get { return isClaimed_; }
      set {
        isClaimed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TopicBattlePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TopicBattlePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PassedCount != other.PassedCount) return false;
      if (RewardId != other.RewardId) return false;
      if (IsClaimed != other.IsClaimed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (PassedCount != 0) hash ^= PassedCount.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (IsClaimed != false) hash ^= IsClaimed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (PassedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PassedCount);
      }
      if (RewardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewardId);
      }
      if (IsClaimed != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsClaimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (PassedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PassedCount);
      }
      if (RewardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewardId);
      }
      if (IsClaimed != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsClaimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (PassedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassedCount);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId);
      }
      if (IsClaimed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TopicBattlePath other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.PassedCount != 0) {
        PassedCount = other.PassedCount;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.IsClaimed != false) {
        IsClaimed = other.IsClaimed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PassedCount = input.ReadInt32();
            break;
          }
          case 24: {
            RewardId = input.ReadInt32();
            break;
          }
          case 32: {
            IsClaimed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PassedCount = input.ReadInt32();
            break;
          }
          case 24: {
            RewardId = input.ReadInt32();
            break;
          }
          case 32: {
            IsClaimed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 获取话题 pk 活动数据
  /// </summary>
  public sealed partial class LS2C_GetTopicActivity_Ack : pb::IMessage<LS2C_GetTopicActivity_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetTopicActivity_Ack> _parser = new pb::MessageParser<LS2C_GetTopicActivity_Ack>(() => new LS2C_GetTopicActivity_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetTopicActivity_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetTopicActivity_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetTopicActivity_Ack(LS2C_GetTopicActivity_Ack other) : this() {
      ackCode_ = other.ackCode_;
      ownerCard_ = other.ownerCard_ != null ? other.ownerCard_.Clone() : null;
      ownerCamp_ = other.ownerCamp_;
      passedCount_ = other.passedCount_;
      campsInfo_ = other.campsInfo_.Clone();
      topicBattlePath_ = other.topicBattlePath_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetTopicActivity_Ack Clone() {
      return new LS2C_GetTopicActivity_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 返回状态码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "ownerCard" field.</summary>
    public const int OwnerCardFieldNumber = 2;
    private global::Server2Client.PlayerCard ownerCard_;
    /// <summary>
    /// 玩家本人名片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.PlayerCard OwnerCard {
      get { return ownerCard_; }
      set {
        ownerCard_ = value;
      }
    }

    /// <summary>Field number for the "ownerCamp" field.</summary>
    public const int OwnerCampFieldNumber = 3;
    private global::Protocol.ECamp ownerCamp_ = global::Protocol.ECamp.NoneCamp;
    /// <summary>
    /// 玩家阵营
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.ECamp OwnerCamp {
      get { return ownerCamp_; }
      set {
        ownerCamp_ = value;
      }
    }

    /// <summary>Field number for the "passedCount" field.</summary>
    public const int PassedCountFieldNumber = 4;
    private int passedCount_;
    /// <summary>
    /// 活动中已通关次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PassedCount {
      get { return passedCount_; }
      set {
        passedCount_ = value;
      }
    }

    /// <summary>Field number for the "campsInfo" field.</summary>
    public const int CampsInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Server2Client.CampInfo> _repeated_campsInfo_codec
        = pb::FieldCodec.ForMessage(42, global::Server2Client.CampInfo.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.CampInfo> campsInfo_ = new pbc::RepeatedField<global::Server2Client.CampInfo>();
    /// <summary>
    /// 双方阵营信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.CampInfo> CampsInfo {
      get { return campsInfo_; }
    }

    /// <summary>Field number for the "topicBattlePath" field.</summary>
    public const int TopicBattlePathFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Server2Client.TopicBattlePath> _repeated_topicBattlePath_codec
        = pb::FieldCodec.ForMessage(50, global::Server2Client.TopicBattlePath.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.TopicBattlePath> topicBattlePath_ = new pbc::RepeatedField<global::Server2Client.TopicBattlePath>();
    /// <summary>
    /// 话题 pk 活动奖励信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.TopicBattlePath> TopicBattlePath {
      get { return topicBattlePath_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetTopicActivity_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetTopicActivity_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (!object.Equals(OwnerCard, other.OwnerCard)) return false;
      if (OwnerCamp != other.OwnerCamp) return false;
      if (PassedCount != other.PassedCount) return false;
      if(!campsInfo_.Equals(other.campsInfo_)) return false;
      if(!topicBattlePath_.Equals(other.topicBattlePath_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (ownerCard_ != null) hash ^= OwnerCard.GetHashCode();
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) hash ^= OwnerCamp.GetHashCode();
      if (PassedCount != 0) hash ^= PassedCount.GetHashCode();
      hash ^= campsInfo_.GetHashCode();
      hash ^= topicBattlePath_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (ownerCard_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnerCard);
      }
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OwnerCamp);
      }
      if (PassedCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PassedCount);
      }
      campsInfo_.WriteTo(output, _repeated_campsInfo_codec);
      topicBattlePath_.WriteTo(output, _repeated_topicBattlePath_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (ownerCard_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OwnerCard);
      }
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OwnerCamp);
      }
      if (PassedCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PassedCount);
      }
      campsInfo_.WriteTo(ref output, _repeated_campsInfo_codec);
      topicBattlePath_.WriteTo(ref output, _repeated_topicBattlePath_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (ownerCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnerCard);
      }
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OwnerCamp);
      }
      if (PassedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassedCount);
      }
      size += campsInfo_.CalculateSize(_repeated_campsInfo_codec);
      size += topicBattlePath_.CalculateSize(_repeated_topicBattlePath_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetTopicActivity_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.ownerCard_ != null) {
        if (ownerCard_ == null) {
          OwnerCard = new global::Server2Client.PlayerCard();
        }
        OwnerCard.MergeFrom(other.OwnerCard);
      }
      if (other.OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        OwnerCamp = other.OwnerCamp;
      }
      if (other.PassedCount != 0) {
        PassedCount = other.PassedCount;
      }
      campsInfo_.Add(other.campsInfo_);
      topicBattlePath_.Add(other.topicBattlePath_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (ownerCard_ == null) {
              OwnerCard = new global::Server2Client.PlayerCard();
            }
            input.ReadMessage(OwnerCard);
            break;
          }
          case 24: {
            OwnerCamp = (global::Protocol.ECamp) input.ReadEnum();
            break;
          }
          case 32: {
            PassedCount = input.ReadInt32();
            break;
          }
          case 42: {
            campsInfo_.AddEntriesFrom(input, _repeated_campsInfo_codec);
            break;
          }
          case 50: {
            topicBattlePath_.AddEntriesFrom(input, _repeated_topicBattlePath_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetTopicActivity_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (ownerCard_ == null) {
              OwnerCard = new global::Server2Client.PlayerCard();
            }
            input.ReadMessage(OwnerCard);
            break;
          }
          case 24: {
            OwnerCamp = (global::Protocol.ECamp) input.ReadEnum();
            break;
          }
          case 32: {
            PassedCount = input.ReadInt32();
            break;
          }
          case 42: {
            campsInfo_.AddEntriesFrom(ref input, _repeated_campsInfo_codec);
            break;
          }
          case 50: {
            topicBattlePath_.AddEntriesFrom(ref input, _repeated_topicBattlePath_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetTopicActivity_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 选取阵营
  /// </summary>
  public sealed partial class LS2C_SelectCamp_Ack : pb::IMessage<LS2C_SelectCamp_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SelectCamp_Ack> _parser = new pb::MessageParser<LS2C_SelectCamp_Ack>(() => new LS2C_SelectCamp_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SelectCamp_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SelectCamp_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SelectCamp_Ack(LS2C_SelectCamp_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SelectCamp_Ack Clone() {
      return new LS2C_SelectCamp_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SelectCamp_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SelectCamp_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SelectCamp_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_SelectCamp_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SelectCamp_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 领取话题 pk 活动奖励
  /// </summary>
  public sealed partial class LS2C_ClaimTopicActivityReward_Ack : pb::IMessage<LS2C_ClaimTopicActivityReward_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_ClaimTopicActivityReward_Ack> _parser = new pb::MessageParser<LS2C_ClaimTopicActivityReward_Ack>(() => new LS2C_ClaimTopicActivityReward_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_ClaimTopicActivityReward_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ClaimTopicActivityReward_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ClaimTopicActivityReward_Ack(LS2C_ClaimTopicActivityReward_Ack other) : this() {
      ackCode_ = other.ackCode_;
      rewardId_ = other.rewardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ClaimTopicActivityReward_Ack Clone() {
      return new LS2C_ClaimTopicActivityReward_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "rewardId" field.</summary>
    public const int RewardIdFieldNumber = 2;
    private int rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_ClaimTopicActivityReward_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_ClaimTopicActivityReward_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (RewardId != other.RewardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (RewardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (RewardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_ClaimTopicActivityReward_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            RewardId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ClaimTopicActivityReward_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            RewardId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_ClaimTopicActivityReward_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 重复领取
        /// </summary>
        [pbr::OriginalName("RepeatClaim")] RepeatClaim = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 设置玩家 Flag
  /// </summary>
  public sealed partial class LS2C_SetActivityFlag_Ack : pb::IMessage<LS2C_SetActivityFlag_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_SetActivityFlag_Ack> _parser = new pb::MessageParser<LS2C_SetActivityFlag_Ack>(() => new LS2C_SetActivityFlag_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_SetActivityFlag_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetActivityFlag_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetActivityFlag_Ack(LS2C_SetActivityFlag_Ack other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_SetActivityFlag_Ack Clone() {
      return new LS2C_SetActivityFlag_Ack(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode code_ = global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode.Success;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_SetActivityFlag_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_SetActivityFlag_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode.Success) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode.Success) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_SetActivityFlag_Ack other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode.Success) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_SetActivityFlag_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_SetActivityFlag_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 0,
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 话题活动获取结算信息 返回
  /// </summary>
  public sealed partial class LS2C_GetTopicActivitySettle_Ack : pb::IMessage<LS2C_GetTopicActivitySettle_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetTopicActivitySettle_Ack> _parser = new pb::MessageParser<LS2C_GetTopicActivitySettle_Ack>(() => new LS2C_GetTopicActivitySettle_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetTopicActivitySettle_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetTopicActivitySettle_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetTopicActivitySettle_Ack(LS2C_GetTopicActivitySettle_Ack other) : this() {
      code_ = other.code_;
      activityId_ = other.activityId_;
      ownerCamp_ = other.ownerCamp_;
      campsInfo_ = other.campsInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetTopicActivitySettle_Ack Clone() {
      return new LS2C_GetTopicActivitySettle_Ack(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode code_ = global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "activityId" field.</summary>
    public const int ActivityIdFieldNumber = 2;
    private int activityId_;
    /// <summary>
    /// 活动ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "ownerCamp" field.</summary>
    public const int OwnerCampFieldNumber = 3;
    private global::Protocol.ECamp ownerCamp_ = global::Protocol.ECamp.NoneCamp;
    /// <summary>
    /// 玩家阵营
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.ECamp OwnerCamp {
      get { return ownerCamp_; }
      set {
        ownerCamp_ = value;
      }
    }

    /// <summary>Field number for the "campsInfo" field.</summary>
    public const int CampsInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Server2Client.CampInfo> _repeated_campsInfo_codec
        = pb::FieldCodec.ForMessage(34, global::Server2Client.CampInfo.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.CampInfo> campsInfo_ = new pbc::RepeatedField<global::Server2Client.CampInfo>();
    /// <summary>
    /// 双方阵营信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.CampInfo> CampsInfo {
      get { return campsInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetTopicActivitySettle_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetTopicActivitySettle_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (ActivityId != other.ActivityId) return false;
      if (OwnerCamp != other.OwnerCamp) return false;
      if(!campsInfo_.Equals(other.campsInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode.Fail) hash ^= Code.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) hash ^= OwnerCamp.GetHashCode();
      hash ^= campsInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActivityId);
      }
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OwnerCamp);
      }
      campsInfo_.WriteTo(output, _repeated_campsInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActivityId);
      }
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OwnerCamp);
      }
      campsInfo_.WriteTo(ref output, _repeated_campsInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivityId);
      }
      if (OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OwnerCamp);
      }
      size += campsInfo_.CalculateSize(_repeated_campsInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetTopicActivitySettle_Ack other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode.Fail) {
        Code = other.Code;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.OwnerCamp != global::Protocol.ECamp.NoneCamp) {
        OwnerCamp = other.OwnerCamp;
      }
      campsInfo_.Add(other.campsInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 24: {
            OwnerCamp = (global::Protocol.ECamp) input.ReadEnum();
            break;
          }
          case 34: {
            campsInfo_.AddEntriesFrom(input, _repeated_campsInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Server2Client.LS2C_GetTopicActivitySettle_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 24: {
            OwnerCamp = (global::Protocol.ECamp) input.ReadEnum();
            break;
          }
          case 34: {
            campsInfo_.AddEntriesFrom(ref input, _repeated_campsInfo_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetTopicActivitySettle_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 分享加入女团 返回
  /// </summary>
  public sealed partial class LS2C_ShareJoinGroup_Ack : pb::IMessage<LS2C_ShareJoinGroup_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_ShareJoinGroup_Ack> _parser = new pb::MessageParser<LS2C_ShareJoinGroup_Ack>(() => new LS2C_ShareJoinGroup_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_ShareJoinGroup_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ShareJoinGroup_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ShareJoinGroup_Ack(LS2C_ShareJoinGroup_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ShareJoinGroup_Ack Clone() {
      return new LS2C_ShareJoinGroup_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_ShareJoinGroup_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_ShareJoinGroup_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_ShareJoinGroup_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ShareJoinGroup_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_ShareJoinGroup_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取女团列表 返回
  /// </summary>
  public sealed partial class LS2C_GetGroupMembers_Ack : pb::IMessage<LS2C_GetGroupMembers_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetGroupMembers_Ack> _parser = new pb::MessageParser<LS2C_GetGroupMembers_Ack>(() => new LS2C_GetGroupMembers_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetGroupMembers_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGroupMembers_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGroupMembers_Ack(LS2C_GetGroupMembers_Ack other) : this() {
      ackCode_ = other.ackCode_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGroupMembers_Ack Clone() {
      return new LS2C_GetGroupMembers_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Server2Client.PlayerCard> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Server2Client.PlayerCard.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.PlayerCard> players_ = new pbc::RepeatedField<global::Server2Client.PlayerCard>();
    /// <summary>
    /// 成员列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.PlayerCard> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetGroupMembers_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetGroupMembers_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetGroupMembers_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetGroupMembers_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetGroupMembers_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 移除女团成员 返回
  /// </summary>
  public sealed partial class LS2C_RemoveGroupMember_Ack : pb::IMessage<LS2C_RemoveGroupMember_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_RemoveGroupMember_Ack> _parser = new pb::MessageParser<LS2C_RemoveGroupMember_Ack>(() => new LS2C_RemoveGroupMember_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_RemoveGroupMember_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_RemoveGroupMember_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_RemoveGroupMember_Ack(LS2C_RemoveGroupMember_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_RemoveGroupMember_Ack Clone() {
      return new LS2C_RemoveGroupMember_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_RemoveGroupMember_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_RemoveGroupMember_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_RemoveGroupMember_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_RemoveGroupMember_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_RemoveGroupMember_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 皮肤赠送 返回
  /// </summary>
  public sealed partial class LS2C_GiveSkin_Ack : pb::IMessage<LS2C_GiveSkin_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GiveSkin_Ack> _parser = new pb::MessageParser<LS2C_GiveSkin_Ack>(() => new LS2C_GiveSkin_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GiveSkin_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkin_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkin_Ack(LS2C_GiveSkin_Ack other) : this() {
      ackCode_ = other.ackCode_;
      shareCode_ = other.shareCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkin_Ack Clone() {
      return new LS2C_GiveSkin_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "shareCode" field.</summary>
    public const int ShareCodeFieldNumber = 2;
    private string shareCode_ = "";
    /// <summary>
    /// 赠送码, 用于分享链接
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShareCode {
      get { return shareCode_; }
      set {
        shareCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GiveSkin_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GiveSkin_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (ShareCode != other.ShareCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (ShareCode.Length != 0) hash ^= ShareCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (ShareCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShareCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (ShareCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShareCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (ShareCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShareCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GiveSkin_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.ShareCode.Length != 0) {
        ShareCode = other.ShareCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            ShareCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GiveSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            ShareCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GiveSkin_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 皮肤不存在
        /// </summary>
        [pbr::OriginalName("NotExist")] NotExist = 2,
        /// <summary>
        /// 没有赠送次数
        /// </summary>
        [pbr::OriginalName("NoGiveCount")] NoGiveCount = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// 皮肤收取 返回
  /// </summary>
  public sealed partial class LS2C_GetGiftSkin_Ack : pb::IMessage<LS2C_GetGiftSkin_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetGiftSkin_Ack> _parser = new pb::MessageParser<LS2C_GetGiftSkin_Ack>(() => new LS2C_GetGiftSkin_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetGiftSkin_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGiftSkin_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGiftSkin_Ack(LS2C_GetGiftSkin_Ack other) : this() {
      ackCode_ = other.ackCode_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      playerCard_ = other.playerCard_ != null ? other.playerCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGiftSkin_Ack Clone() {
      return new LS2C_GetGiftSkin_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private global::Protocol.Item item_;
    /// <summary>
    /// 收取的皮肤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Protocol.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "playerCard" field.</summary>
    public const int PlayerCardFieldNumber = 3;
    private global::Server2Client.PlayerCard playerCard_;
    /// <summary>
    /// 赠送者名片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.PlayerCard PlayerCard {
      get { return playerCard_; }
      set {
        playerCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetGiftSkin_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetGiftSkin_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(PlayerCard, other.PlayerCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (playerCard_ != null) hash ^= PlayerCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (item_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Item);
      }
      if (playerCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (item_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Item);
      }
      if (playerCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (playerCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetGiftSkin_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Protocol.Item();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.playerCard_ != null) {
        if (playerCard_ == null) {
          PlayerCard = new global::Server2Client.PlayerCard();
        }
        PlayerCard.MergeFrom(other.PlayerCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (item_ == null) {
              Item = new global::Protocol.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 26: {
            if (playerCard_ == null) {
              PlayerCard = new global::Server2Client.PlayerCard();
            }
            input.ReadMessage(PlayerCard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetGiftSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (item_ == null) {
              Item = new global::Protocol.Item();
            }
            input.ReadMessage(Item);
            break;
          }
          case 26: {
            if (playerCard_ == null) {
              PlayerCard = new global::Server2Client.PlayerCard();
            }
            input.ReadMessage(PlayerCard);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetGiftSkin_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 链接已经被使用 (弹出tips：该装扮已被其他玩家领取！)
        /// </summary>
        [pbr::OriginalName("BeenUsed")] BeenUsed = 2,
        /// <summary>
        /// 已过期 (弹出tips：链接已失效，无法领取！)
        /// </summary>
        [pbr::OriginalName("Expired")] Expired = 3,
        /// <summary>
        /// 自己不可以领取
        /// </summary>
        [pbr::OriginalName("Self")] Self = 4,
        /// <summary>
        /// 已经拥有
        /// </summary>
        [pbr::OriginalName("AlreadyHave")] AlreadyHave = 5,
        /// <summary>
        /// 没有领取次数
        /// </summary>
        [pbr::OriginalName("NoReceiveCount")] NoReceiveCount = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// 收取赠送的皮肤 返回
  /// </summary>
  public sealed partial class LS2C_CollectGiftSkin_Ack : pb::IMessage<LS2C_CollectGiftSkin_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_CollectGiftSkin_Ack> _parser = new pb::MessageParser<LS2C_CollectGiftSkin_Ack>(() => new LS2C_CollectGiftSkin_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_CollectGiftSkin_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_CollectGiftSkin_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_CollectGiftSkin_Ack(LS2C_CollectGiftSkin_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_CollectGiftSkin_Ack Clone() {
      return new LS2C_CollectGiftSkin_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_CollectGiftSkin_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_CollectGiftSkin_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_CollectGiftSkin_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_CollectGiftSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_CollectGiftSkin_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 已过期 (弹出tips：链接已失效，无法领取！)
        /// </summary>
        [pbr::OriginalName("Expired")] Expired = 2,
        /// <summary>
        /// 已经拥有
        /// </summary>
        [pbr::OriginalName("AlreadyHave")] AlreadyHave = 3,
        /// <summary>
        /// 没有领取次数
        /// </summary>
        [pbr::OriginalName("NoReceiveCount")] NoReceiveCount = 4,
      }

    }
    #endregion

  }

  public sealed partial class Notice : pb::IMessage<Notice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Notice> _parser = new pb::MessageParser<Notice>(() => new Notice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Notice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Notice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Notice(Notice other) : this() {
      noticeId_ = other.noticeId_;
      type_ = other.type_;
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      misc_ = other.misc_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Notice Clone() {
      return new Notice(this);
    }

    /// <summary>Field number for the "noticeId" field.</summary>
    public const int NoticeIdFieldNumber = 1;
    private string noticeId_ = "";
    /// <summary>
    /// 通知 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NoticeId {
      get { return noticeId_; }
      set {
        noticeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Server2Client.ENoticeType type_ = global::Server2Client.ENoticeType.None;
    /// <summary>
    /// 通知类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.ENoticeType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private global::Server2Client.PlayerCard sender_;
    /// <summary>
    /// 发送者名片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.PlayerCard Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    /// <summary>Field number for the "misc" field.</summary>
    public const int MiscFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_misc_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> misc_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 附加信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Misc {
      get { return misc_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Notice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Notice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NoticeId != other.NoticeId) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      if(!misc_.Equals(other.misc_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NoticeId.Length != 0) hash ^= NoticeId.GetHashCode();
      if (Type != global::Server2Client.ENoticeType.None) hash ^= Type.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      hash ^= misc_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NoticeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NoticeId);
      }
      if (Type != global::Server2Client.ENoticeType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (sender_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Sender);
      }
      misc_.WriteTo(output, _repeated_misc_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NoticeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NoticeId);
      }
      if (Type != global::Server2Client.ENoticeType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (sender_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Sender);
      }
      misc_.WriteTo(ref output, _repeated_misc_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NoticeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoticeId);
      }
      if (Type != global::Server2Client.ENoticeType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      size += misc_.CalculateSize(_repeated_misc_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Notice other) {
      if (other == null) {
        return;
      }
      if (other.NoticeId.Length != 0) {
        NoticeId = other.NoticeId;
      }
      if (other.Type != global::Server2Client.ENoticeType.None) {
        Type = other.Type;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          Sender = new global::Server2Client.PlayerCard();
        }
        Sender.MergeFrom(other.Sender);
      }
      misc_.Add(other.misc_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NoticeId = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Server2Client.ENoticeType) input.ReadEnum();
            break;
          }
          case 26: {
            if (sender_ == null) {
              Sender = new global::Server2Client.PlayerCard();
            }
            input.ReadMessage(Sender);
            break;
          }
          case 34: {
            misc_.AddEntriesFrom(input, _repeated_misc_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NoticeId = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Server2Client.ENoticeType) input.ReadEnum();
            break;
          }
          case 26: {
            if (sender_ == null) {
              Sender = new global::Server2Client.PlayerCard();
            }
            input.ReadMessage(Sender);
            break;
          }
          case 34: {
            misc_.AddEntriesFrom(ref input, _repeated_misc_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 获取通知列表 返回
  /// </summary>
  public sealed partial class LS2C_GetNoticeList_Ack : pb::IMessage<LS2C_GetNoticeList_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetNoticeList_Ack> _parser = new pb::MessageParser<LS2C_GetNoticeList_Ack>(() => new LS2C_GetNoticeList_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetNoticeList_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetNoticeList_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetNoticeList_Ack(LS2C_GetNoticeList_Ack other) : this() {
      ackCode_ = other.ackCode_;
      canGiveSkinCount_ = other.canGiveSkinCount_;
      canReceiveSkinCount_ = other.canReceiveSkinCount_;
      noticeList_ = other.noticeList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetNoticeList_Ack Clone() {
      return new LS2C_GetNoticeList_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "canGiveSkinCount" field.</summary>
    public const int CanGiveSkinCountFieldNumber = 2;
    private int canGiveSkinCount_;
    /// <summary>
    /// 可赠送皮肤礼物次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CanGiveSkinCount {
      get { return canGiveSkinCount_; }
      set {
        canGiveSkinCount_ = value;
      }
    }

    /// <summary>Field number for the "canReceiveSkinCount" field.</summary>
    public const int CanReceiveSkinCountFieldNumber = 3;
    private int canReceiveSkinCount_;
    /// <summary>
    /// 可领取皮肤礼物次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CanReceiveSkinCount {
      get { return canReceiveSkinCount_; }
      set {
        canReceiveSkinCount_ = value;
      }
    }

    /// <summary>Field number for the "noticeList" field.</summary>
    public const int NoticeListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Server2Client.Notice> _repeated_noticeList_codec
        = pb::FieldCodec.ForMessage(34, global::Server2Client.Notice.Parser);
    private readonly pbc::RepeatedField<global::Server2Client.Notice> noticeList_ = new pbc::RepeatedField<global::Server2Client.Notice>();
    /// <summary>
    /// 通知列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Server2Client.Notice> NoticeList {
      get { return noticeList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetNoticeList_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetNoticeList_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (CanGiveSkinCount != other.CanGiveSkinCount) return false;
      if (CanReceiveSkinCount != other.CanReceiveSkinCount) return false;
      if(!noticeList_.Equals(other.noticeList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (CanGiveSkinCount != 0) hash ^= CanGiveSkinCount.GetHashCode();
      if (CanReceiveSkinCount != 0) hash ^= CanReceiveSkinCount.GetHashCode();
      hash ^= noticeList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (CanGiveSkinCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CanGiveSkinCount);
      }
      if (CanReceiveSkinCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CanReceiveSkinCount);
      }
      noticeList_.WriteTo(output, _repeated_noticeList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (CanGiveSkinCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CanGiveSkinCount);
      }
      if (CanReceiveSkinCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CanReceiveSkinCount);
      }
      noticeList_.WriteTo(ref output, _repeated_noticeList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (CanGiveSkinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanGiveSkinCount);
      }
      if (CanReceiveSkinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanReceiveSkinCount);
      }
      size += noticeList_.CalculateSize(_repeated_noticeList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetNoticeList_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.CanGiveSkinCount != 0) {
        CanGiveSkinCount = other.CanGiveSkinCount;
      }
      if (other.CanReceiveSkinCount != 0) {
        CanReceiveSkinCount = other.CanReceiveSkinCount;
      }
      noticeList_.Add(other.noticeList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            CanGiveSkinCount = input.ReadInt32();
            break;
          }
          case 24: {
            CanReceiveSkinCount = input.ReadInt32();
            break;
          }
          case 34: {
            noticeList_.AddEntriesFrom(input, _repeated_noticeList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetNoticeList_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            CanGiveSkinCount = input.ReadInt32();
            break;
          }
          case 24: {
            CanReceiveSkinCount = input.ReadInt32();
            break;
          }
          case 34: {
            noticeList_.AddEntriesFrom(ref input, _repeated_noticeList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetNoticeList_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 已播放通知 返回
  /// </summary>
  public sealed partial class LS2C_ReadNotice_Ack : pb::IMessage<LS2C_ReadNotice_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_ReadNotice_Ack> _parser = new pb::MessageParser<LS2C_ReadNotice_Ack>(() => new LS2C_ReadNotice_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_ReadNotice_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ReadNotice_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ReadNotice_Ack(LS2C_ReadNotice_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_ReadNotice_Ack Clone() {
      return new LS2C_ReadNotice_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_ReadNotice_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_ReadNotice_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_ReadNotice_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_ReadNotice_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_ReadNotice_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获取赠送中的皮肤列表 返回
  /// </summary>
  public sealed partial class LS2C_GetGivingSkinGifts_Ack : pb::IMessage<LS2C_GetGivingSkinGifts_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetGivingSkinGifts_Ack> _parser = new pb::MessageParser<LS2C_GetGivingSkinGifts_Ack>(() => new LS2C_GetGivingSkinGifts_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetGivingSkinGifts_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGivingSkinGifts_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGivingSkinGifts_Ack(LS2C_GetGivingSkinGifts_Ack other) : this() {
      ackCode_ = other.ackCode_;
      givingSkinList_ = other.givingSkinList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetGivingSkinGifts_Ack Clone() {
      return new LS2C_GetGivingSkinGifts_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "givingSkinList" field.</summary>
    public const int GivingSkinListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protocol.Item> _repeated_givingSkinList_codec
        = pb::FieldCodec.ForMessage(18, global::Protocol.Item.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Item> givingSkinList_ = new pbc::RepeatedField<global::Protocol.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.Item> GivingSkinList {
      get { return givingSkinList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetGivingSkinGifts_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetGivingSkinGifts_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if(!givingSkinList_.Equals(other.givingSkinList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      hash ^= givingSkinList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      givingSkinList_.WriteTo(output, _repeated_givingSkinList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      givingSkinList_.WriteTo(ref output, _repeated_givingSkinList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      size += givingSkinList_.CalculateSize(_repeated_givingSkinList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetGivingSkinGifts_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      givingSkinList_.Add(other.givingSkinList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            givingSkinList_.AddEntriesFrom(input, _repeated_givingSkinList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetGivingSkinGifts_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            givingSkinList_.AddEntriesFrom(ref input, _repeated_givingSkinList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetGivingSkinGifts_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 撤回赠送 返回
  /// </summary>
  public sealed partial class LS2C_RevokeGivingSkinGift_Ack : pb::IMessage<LS2C_RevokeGivingSkinGift_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_RevokeGivingSkinGift_Ack> _parser = new pb::MessageParser<LS2C_RevokeGivingSkinGift_Ack>(() => new LS2C_RevokeGivingSkinGift_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_RevokeGivingSkinGift_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_RevokeGivingSkinGift_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_RevokeGivingSkinGift_Ack(LS2C_RevokeGivingSkinGift_Ack other) : this() {
      ackCode_ = other.ackCode_;
      canGiveSkinCount_ = other.canGiveSkinCount_;
      canReceiveSkinCount_ = other.canReceiveSkinCount_;
      nextMondayTimestamp_ = other.nextMondayTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_RevokeGivingSkinGift_Ack Clone() {
      return new LS2C_RevokeGivingSkinGift_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "canGiveSkinCount" field.</summary>
    public const int CanGiveSkinCountFieldNumber = 2;
    private int canGiveSkinCount_;
    /// <summary>
    /// 可赠送皮肤礼物次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CanGiveSkinCount {
      get { return canGiveSkinCount_; }
      set {
        canGiveSkinCount_ = value;
      }
    }

    /// <summary>Field number for the "canReceiveSkinCount" field.</summary>
    public const int CanReceiveSkinCountFieldNumber = 3;
    private int canReceiveSkinCount_;
    /// <summary>
    /// 可领取皮肤礼物次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CanReceiveSkinCount {
      get { return canReceiveSkinCount_; }
      set {
        canReceiveSkinCount_ = value;
      }
    }

    /// <summary>Field number for the "nextMondayTimestamp" field.</summary>
    public const int NextMondayTimestampFieldNumber = 4;
    private int nextMondayTimestamp_;
    /// <summary>
    /// 下周一时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NextMondayTimestamp {
      get { return nextMondayTimestamp_; }
      set {
        nextMondayTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_RevokeGivingSkinGift_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_RevokeGivingSkinGift_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (CanGiveSkinCount != other.CanGiveSkinCount) return false;
      if (CanReceiveSkinCount != other.CanReceiveSkinCount) return false;
      if (NextMondayTimestamp != other.NextMondayTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (CanGiveSkinCount != 0) hash ^= CanGiveSkinCount.GetHashCode();
      if (CanReceiveSkinCount != 0) hash ^= CanReceiveSkinCount.GetHashCode();
      if (NextMondayTimestamp != 0) hash ^= NextMondayTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (CanGiveSkinCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CanGiveSkinCount);
      }
      if (CanReceiveSkinCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CanReceiveSkinCount);
      }
      if (NextMondayTimestamp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NextMondayTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (CanGiveSkinCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CanGiveSkinCount);
      }
      if (CanReceiveSkinCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CanReceiveSkinCount);
      }
      if (NextMondayTimestamp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NextMondayTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (CanGiveSkinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanGiveSkinCount);
      }
      if (CanReceiveSkinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanReceiveSkinCount);
      }
      if (NextMondayTimestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextMondayTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_RevokeGivingSkinGift_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.CanGiveSkinCount != 0) {
        CanGiveSkinCount = other.CanGiveSkinCount;
      }
      if (other.CanReceiveSkinCount != 0) {
        CanReceiveSkinCount = other.CanReceiveSkinCount;
      }
      if (other.NextMondayTimestamp != 0) {
        NextMondayTimestamp = other.NextMondayTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            CanGiveSkinCount = input.ReadInt32();
            break;
          }
          case 24: {
            CanReceiveSkinCount = input.ReadInt32();
            break;
          }
          case 32: {
            NextMondayTimestamp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_RevokeGivingSkinGift_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 16: {
            CanGiveSkinCount = input.ReadInt32();
            break;
          }
          case 24: {
            CanReceiveSkinCount = input.ReadInt32();
            break;
          }
          case 32: {
            NextMondayTimestamp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_RevokeGivingSkinGift_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 礼物已送出
        /// </summary>
        [pbr::OriginalName("HasSend")] HasSend = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 获得指定公众号免费皮肤 返回
  /// </summary>
  public sealed partial class LS2C_GetOfficialFreeSkin_Ack : pb::IMessage<LS2C_GetOfficialFreeSkin_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GetOfficialFreeSkin_Ack> _parser = new pb::MessageParser<LS2C_GetOfficialFreeSkin_Ack>(() => new LS2C_GetOfficialFreeSkin_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GetOfficialFreeSkin_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetOfficialFreeSkin_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetOfficialFreeSkin_Ack(LS2C_GetOfficialFreeSkin_Ack other) : this() {
      ackCode_ = other.ackCode_;
      rewardSkin_ = other.rewardSkin_ != null ? other.rewardSkin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GetOfficialFreeSkin_Ack Clone() {
      return new LS2C_GetOfficialFreeSkin_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "rewardSkin" field.</summary>
    public const int RewardSkinFieldNumber = 2;
    private global::Server2Client.SkinInfo rewardSkin_;
    /// <summary>
    /// 获得的奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.SkinInfo RewardSkin {
      get { return rewardSkin_; }
      set {
        rewardSkin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GetOfficialFreeSkin_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GetOfficialFreeSkin_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (!object.Equals(RewardSkin, other.RewardSkin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (rewardSkin_ != null) hash ^= RewardSkin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (rewardSkin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardSkin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (rewardSkin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardSkin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (rewardSkin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardSkin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GetOfficialFreeSkin_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.rewardSkin_ != null) {
        if (rewardSkin_ == null) {
          RewardSkin = new global::Server2Client.SkinInfo();
        }
        RewardSkin.MergeFrom(other.RewardSkin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (rewardSkin_ == null) {
              RewardSkin = new global::Server2Client.SkinInfo();
            }
            input.ReadMessage(RewardSkin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GetOfficialFreeSkin_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (rewardSkin_ == null) {
              RewardSkin = new global::Server2Client.SkinInfo();
            }
            input.ReadMessage(RewardSkin);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GetOfficialFreeSkin_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 重复领取
        /// </summary>
        [pbr::OriginalName("RepeatClaim")] RepeatClaim = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 新皮肤赠送 返回
  /// </summary>
  public sealed partial class LS2C_GiveSkin_V2_Ack : pb::IMessage<LS2C_GiveSkin_V2_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GiveSkin_V2_Ack> _parser = new pb::MessageParser<LS2C_GiveSkin_V2_Ack>(() => new LS2C_GiveSkin_V2_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GiveSkin_V2_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkin_V2_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkin_V2_Ack(LS2C_GiveSkin_V2_Ack other) : this() {
      ackCode_ = other.ackCode_;
      shareCode_ = other.shareCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkin_V2_Ack Clone() {
      return new LS2C_GiveSkin_V2_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode.Fail;
    /// <summary>
    /// 执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "shareCode" field.</summary>
    public const int ShareCodeFieldNumber = 2;
    private string shareCode_ = "";
    /// <summary>
    /// 赠送码, 用于分享链接
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShareCode {
      get { return shareCode_; }
      set {
        shareCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GiveSkin_V2_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GiveSkin_V2_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (ShareCode != other.ShareCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (ShareCode.Length != 0) hash ^= ShareCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (ShareCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShareCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (ShareCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShareCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (ShareCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShareCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GiveSkin_V2_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.ShareCode.Length != 0) {
        ShareCode = other.ShareCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            ShareCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GiveSkin_V2_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            ShareCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GiveSkin_V2_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 皮肤不存在
        /// </summary>
        [pbr::OriginalName("NotExist")] NotExist = 2,
        /// <summary>
        /// 没有赠送次数
        /// </summary>
        [pbr::OriginalName("NoGiveCount")] NoGiveCount = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// 皮肤赠送确认 返回
  /// </summary>
  public sealed partial class LS2C_GiveSkinConfirm_Ack : pb::IMessage<LS2C_GiveSkinConfirm_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_GiveSkinConfirm_Ack> _parser = new pb::MessageParser<LS2C_GiveSkinConfirm_Ack>(() => new LS2C_GiveSkinConfirm_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_GiveSkinConfirm_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkinConfirm_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkinConfirm_Ack(LS2C_GiveSkinConfirm_Ack other) : this() {
      ackCode_ = other.ackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_GiveSkinConfirm_Ack Clone() {
      return new LS2C_GiveSkinConfirm_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode.Fail;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_GiveSkinConfirm_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_GiveSkinConfirm_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_GiveSkinConfirm_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_GiveSkinConfirm_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_GiveSkinConfirm_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 皮肤不存在
        /// </summary>
        [pbr::OriginalName("NotExist")] NotExist = 2,
        /// <summary>
        /// 没有赠送次数
        /// </summary>
        [pbr::OriginalName("NoGiveCount")] NoGiveCount = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /////////////////////////// 邮件相关消息 start //////////////////////////
  /// 返回邮件列表
  /// </summary>
  public sealed partial class LS2C_MailGetList_Ack : pb::IMessage<LS2C_MailGetList_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_MailGetList_Ack> _parser = new pb::MessageParser<LS2C_MailGetList_Ack>(() => new LS2C_MailGetList_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_MailGetList_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailGetList_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailGetList_Ack(LS2C_MailGetList_Ack other) : this() {
      ackCode_ = other.ackCode_;
      mailList_ = other.mailList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailGetList_Ack Clone() {
      return new LS2C_MailGetList_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "mailList" field.</summary>
    public const int MailListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protocol.MailData> _repeated_mailList_codec
        = pb::FieldCodec.ForMessage(18, global::Protocol.MailData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.MailData> mailList_ = new pbc::RepeatedField<global::Protocol.MailData>();
    /// <summary>
    ///邮件列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.MailData> MailList {
      get { return mailList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_MailGetList_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_MailGetList_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if(!mailList_.Equals(other.mailList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      hash ^= mailList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      mailList_.WriteTo(output, _repeated_mailList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      mailList_.WriteTo(ref output, _repeated_mailList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      size += mailList_.CalculateSize(_repeated_mailList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_MailGetList_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      mailList_.Add(other.mailList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            mailList_.AddEntriesFrom(input, _repeated_mailList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailGetList_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            mailList_.AddEntriesFrom(ref input, _repeated_mailList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_MailGetList_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        ///请求orleans异常
        /// </summary>
        [pbr::OriginalName("Orleans_Fail")] OrleansFail = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回领取邮件奖励
  /// </summary>
  public sealed partial class LS2C_MailClaimAttachment_Ack : pb::IMessage<LS2C_MailClaimAttachment_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_MailClaimAttachment_Ack> _parser = new pb::MessageParser<LS2C_MailClaimAttachment_Ack>(() => new LS2C_MailClaimAttachment_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_MailClaimAttachment_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailClaimAttachment_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailClaimAttachment_Ack(LS2C_MailClaimAttachment_Ack other) : this() {
      ackCode_ = other.ackCode_;
      mailId_ = other.mailId_;
      item_ = other.item_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailClaimAttachment_Ack Clone() {
      return new LS2C_MailClaimAttachment_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "mailId" field.</summary>
    public const int MailIdFieldNumber = 2;
    private string mailId_ = "";
    /// <summary>
    ///邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MailId {
      get { return mailId_; }
      set {
        mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Item" field.</summary>
    public const int ItemFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protocol.Item> _repeated_item_codec
        = pb::FieldCodec.ForMessage(26, global::Protocol.Item.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Item> item_ = new pbc::RepeatedField<global::Protocol.Item>();
    /// <summary>
    /// 实际提取的物品列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Protocol.Item> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_MailClaimAttachment_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_MailClaimAttachment_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (MailId != other.MailId) return false;
      if(!item_.Equals(other.item_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (MailId.Length != 0) hash ^= MailId.GetHashCode();
      hash ^= item_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (MailId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailId);
      }
      item_.WriteTo(output, _repeated_item_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (MailId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailId);
      }
      item_.WriteTo(ref output, _repeated_item_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (MailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
      }
      size += item_.CalculateSize(_repeated_item_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_MailClaimAttachment_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.MailId.Length != 0) {
        MailId = other.MailId;
      }
      item_.Add(other.item_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            MailId = input.ReadString();
            break;
          }
          case 26: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailClaimAttachment_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            MailId = input.ReadString();
            break;
          }
          case 26: {
            item_.AddEntriesFrom(ref input, _repeated_item_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_MailClaimAttachment_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
        /// <summary>
        /// 部分成功
        /// </summary>
        [pbr::OriginalName("PartialSuccess")] PartialSuccess = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回标记邮件已读
  /// </summary>
  public sealed partial class LS2C_MailMarkRead_Ack : pb::IMessage<LS2C_MailMarkRead_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_MailMarkRead_Ack> _parser = new pb::MessageParser<LS2C_MailMarkRead_Ack>(() => new LS2C_MailMarkRead_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_MailMarkRead_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailMarkRead_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailMarkRead_Ack(LS2C_MailMarkRead_Ack other) : this() {
      ackCode_ = other.ackCode_;
      mailId_ = other.mailId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailMarkRead_Ack Clone() {
      return new LS2C_MailMarkRead_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "mailId" field.</summary>
    public const int MailIdFieldNumber = 2;
    private string mailId_ = "";
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MailId {
      get { return mailId_; }
      set {
        mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_MailMarkRead_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_MailMarkRead_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (MailId != other.MailId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (MailId.Length != 0) hash ^= MailId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (MailId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (MailId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (MailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_MailMarkRead_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.MailId.Length != 0) {
        MailId = other.MailId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            MailId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailMarkRead_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            MailId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_MailMarkRead_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 返回标记邮件已读
  /// </summary>
  public sealed partial class LS2C_MailDelete_Ack : pb::IMessage<LS2C_MailDelete_Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LS2C_MailDelete_Ack> _parser = new pb::MessageParser<LS2C_MailDelete_Ack>(() => new LS2C_MailDelete_Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LS2C_MailDelete_Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Server2Client.Server2ClientReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailDelete_Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailDelete_Ack(LS2C_MailDelete_Ack other) : this() {
      ackCode_ = other.ackCode_;
      mailId_ = other.mailId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LS2C_MailDelete_Ack Clone() {
      return new LS2C_MailDelete_Ack(this);
    }

    /// <summary>Field number for the "ackCode" field.</summary>
    public const int AckCodeFieldNumber = 1;
    private global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode ackCode_ = global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode.Fail;
    /// <summary>
    ///执行结果错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode AckCode {
      get { return ackCode_; }
      set {
        ackCode_ = value;
      }
    }

    /// <summary>Field number for the "mailId" field.</summary>
    public const int MailIdFieldNumber = 2;
    private string mailId_ = "";
    /// <summary>
    /// 邮件ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MailId {
      get { return mailId_; }
      set {
        mailId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LS2C_MailDelete_Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LS2C_MailDelete_Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AckCode != other.AckCode) return false;
      if (MailId != other.MailId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AckCode != global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode.Fail) hash ^= AckCode.GetHashCode();
      if (MailId.Length != 0) hash ^= MailId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AckCode != global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (MailId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AckCode != global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode.Fail) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AckCode);
      }
      if (MailId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AckCode != global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode.Fail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AckCode);
      }
      if (MailId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LS2C_MailDelete_Ack other) {
      if (other == null) {
        return;
      }
      if (other.AckCode != global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode.Fail) {
        AckCode = other.AckCode;
      }
      if (other.MailId.Length != 0) {
        MailId = other.MailId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            MailId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AckCode = (global::Server2Client.LS2C_MailDelete_Ack.Types.AckCode) input.ReadEnum();
            break;
          }
          case 18: {
            MailId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LS2C_MailDelete_Ack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AckCode {
        /// <summary>
        /// 失败
        /// </summary>
        [pbr::OriginalName("Fail")] Fail = 0,
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Success")] Success = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
