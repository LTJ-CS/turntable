
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace ClientCfg.cfg
{
public sealed partial class GDLanguageData : Luban.BeanBase
{
    public GDLanguageData(JSONNode _buf) 
    {
        { if(!_buf["id"].IsString) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["i18nKey"].IsString) { throw new SerializationException(); }  I18nKey = _buf["i18nKey"]; }
        { if(!_buf["zh"].IsString) { throw new SerializationException(); }  Zh = _buf["zh"]; }
        { var _j = _buf["zh_hk"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsString) { throw new SerializationException(); }  ZhHk = _j; } } else { ZhHk = null; } }
        { var _j = _buf["en"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsString) { throw new SerializationException(); }  En = _j; } } else { En = null; } }
        { var _j = _buf["ja"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsString) { throw new SerializationException(); }  Ja = _j; } } else { Ja = null; } }
        { var _j = _buf["ko"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsString) { throw new SerializationException(); }  Ko = _j; } } else { Ko = null; } }
        { var _j = _buf["de"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsString) { throw new SerializationException(); }  De = _j; } } else { De = null; } }
        { var _j = _buf["fr"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsString) { throw new SerializationException(); }  Fr = _j; } } else { Fr = null; } }
        { var _j = _buf["pt_br"]; if (_j.Tag != JSONNodeType.None && _j.Tag != JSONNodeType.NullValue) { { if(!_j.IsString) { throw new SerializationException(); }  PtBr = _j; } } else { PtBr = null; } }
    }

    public static GDLanguageData DeserializeGDLanguageData(JSONNode _buf)
    {
        return new cfg.GDLanguageData(_buf);
    }

    /// <summary>
    /// 游戏文本
    /// </summary>
    public readonly string Id;
    public readonly string I18nKey;
    public readonly string Zh;
    public readonly string ZhHk;
    public readonly string En;
    public readonly string Ja;
    public readonly string Ko;
    public readonly string De;
    public readonly string Fr;
    public readonly string PtBr;
   
    public const int __ID__ = -1684289687;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "i18nKey:" + I18nKey + ","
        + "zh:" + Zh + ","
        + "zhHk:" + ZhHk + ","
        + "en:" + En + ","
        + "ja:" + Ja + ","
        + "ko:" + Ko + ","
        + "de:" + De + ","
        + "fr:" + Fr + ","
        + "ptBr:" + PtBr + ","
        + "}";
    }
}

}
